{"version":3,"sources":["components/utils_components/loader.module.css","components/main/work_wrapper/projects/projects_manage/projects_manage.module.css","components/main/work_wrapper/profile/profile.module.css","components/header/header.module.css","components/utils_components/pagination/pagination.module.css","components/auth_form/auth_form.module.css","components/main/work_wrapper/work_with_project_form/work_with_project_form.module.css","components/main/work_wrapper/work_wrapper.module.css","components/main/work_wrapper/projects/projects_manage/work_with_task_form/work_with_task_form.module.css","components/main/work_wrapper/notifications/notifications.module.css","components/main/work_wrapper/projects/all_projects/all_projects.module.css","components/main/work_wrapper/developers/developers.module.css","components/main/work_wrapper/projects/projects_manage/project_tasks/all_tasks/all_tasks.module.css","components/main/work_wrapper/projects/projects_manage/project_info/project_info.module.css","reportWebVitals.js","api/index.js","redux/utils/index.js","redux/reducers/auth_reducer.js","redux/reducers/developers_reducer.js","redux/reducers/notification_reducer.js","redux/reducers/profile_reducer.js","redux/reducers/projects_reducer.js","redux/store.js","components/utils_components/Loader.js","components/header/Header.js","components/auth_form/AuthForm.js","components/main/aside/Aside.js","redux/selectors/index.js","components/main/aside/AsideContainer.js","components/main/work_wrapper/profile/profile_info_block/ProfileChangeForm.js","components/utils/formats.js","components/main/work_wrapper/profile/profile_info_block/ProfileInfo.js","components/main/work_wrapper/profile/Profile.js","components/main/work_wrapper/profile/ProfileSide.js","components/main/work_wrapper/profile/ProfileContainer.js","components/main/work_wrapper/projects/all_projects/single_project/SingleProject.js","components/utils_components/pagination/Pagination.js","components/main/work_wrapper/projects/all_projects/ProjectsSearchForm.js","components/main/work_wrapper/projects/all_projects/Projects.js","components/main/work_wrapper/projects/all_projects/ProjectsSide.js","components/main/work_wrapper/projects/all_projects/ProjectsContainer.js","components/main/work_wrapper/developers/DeveloperSearchForm.js","components/main/work_wrapper/developers/developer/Developer.js","components/main/work_wrapper/developers/Developers.js","components/main/work_wrapper/developers/DevelopersSide.js","components/main/work_wrapper/developers/DevelopersContainer.js","components/main/work_wrapper/put_developer_form/PutDeveloperForm.js","components/main/work_wrapper/work_with_project_form/WorkWithProjectForm.js","components/main/work_wrapper/notifications/single_notification/SingleNotification.js","components/main/work_wrapper/notifications/add_notification_form/AddNotificationForm.js","components/main/work_wrapper/notifications/Notifications.js","components/main/work_wrapper/notifications/NotificationsSide.js","components/main/work_wrapper/notifications/AllNotificationsSide.js","components/main/work_wrapper/notifications/AllNotificationsContainer.js","components/main/work_wrapper/projects/projects_manage/project_info/ProjectInfo.js","components/main/work_wrapper/projects/projects_manage/project_participants/ProjectParticipantsContainer.js","components/main/work_wrapper/projects/projects_manage/work_with_task_form/WorkWithTaskForm.js","components/main/work_wrapper/projects/projects_manage/project_tasks/all_tasks/TasksSearchForm.js","components/main/work_wrapper/projects/projects_manage/project_tasks/all_tasks/single_task/SingleTask.js","components/main/work_wrapper/projects/projects_manage/project_tasks/all_tasks/AllTasks.js","components/main/work_wrapper/projects/projects_manage/project_tasks/all_tasks/AllTasksSide.js","redux/reducers/tasks_reducer.js","components/main/work_wrapper/projects/projects_manage/project_tasks/TasksContainer.js","components/main/work_wrapper/projects/projects_manage/project_tasks/Tasks.js","components/main/work_wrapper/projects/projects_manage/ProjectsManage.js","components/main/work_wrapper/projects/projects_manage/ProjectsManageSide.js","components/main/work_wrapper/WorkWrapper.js","components/main/work_wrapper/WorkWrapperWithSide.js","components/main/work_wrapper/WorkWrapperContainer.js","App.js","AppContainer.js","index.js","components/main/work_wrapper/put_developer_form/put_developer_form.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","request","axios","create","baseURL","secretKey","keyForPasswords","titleItemsChange","nameItem","slice","toUpperCase","length","toLowerCase","changingDatesAPI","taskId","url","get","changingDateId","cause","post","deadlineBefore","deadlineAfter","projectsAPI","page","pagSize","title","developerId","id","description","deadline","leadId","developersAPI","email","pass","hashPass","encodeURIComponent","cryptoJS","AES","encrypt","toString","console","log","password","actualPage","paginationSize","surname","hashEmail","projectId","developerData","name","patronymic","data","file","fd","FormData","append","Date","now","fetch","method","body","notificationsAPI","notificationId","sender","content","date","tasksAPI","results","successResponseCondition","status","errMessage","SET_AUTH_ID","SET_ADMIN_RULES","defaultState","authId","isAdmin","setAuthId","type","setAdminRulesAC","SET_DEVELOPERS_LIST","SET_TOTAL_COUNT","developersList","totalDevelopersCount","positionCodes","specialtyCodes","setDevelopersListAC","newDevelopersList","setTotalCount","newTotalCount","SET_NOTIFICATIONS_LIST","SET_TOTAL_NOTIFICATIONS_COUNT","notificationsList","totalNotificationsCount","setNotificationsListAC","newNotificationsList","setTotalNotificationsCount","SET_PROFILE_INFORMATION","profileInformation","getProfile","dispatch","a","response","candidate","newProfileInformation","developer_name","developer_surname","developer_patronymic","position","developer_position","birth","developer_birth","avatarURL","developer_avatar_url","developer_email","developer_password","specialty","developer_specialty","developer_is_admin","Promise","reject","Error","SET_PROJECTS_LIST","SET_TOTAL_PROJECTS_COUNT","SET_ACTUAL_PROJECT","projectsList","totalProjectsCount","actualProject","setProjectsList","newProjectsList","setTotalProjectsCount","projectsCount","reducers","combineReducers","auth","state","action","projects","actualProjectObject","developers","notifications","profile","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Loader","className","style","Header","headerLogo","AuthForm","props","onSubmitAuth","formik","useFormik","initialValues","login","validationSchema","Yup","max","required","onSubmit","handleSubmit","autoComplete","placeholder","getFieldProps","errors","touched","withRouter","accessRight","location","to","pathname","includes","authIdSelector","isAdminSelector","totalNotificationsCountSelector","notificationsListSelector","notificationsPaginationSize","positionCodesSelector","specialtyCodesSelector","totalDevelopersCountSelector","paginationSizeDevelopersSelector","developersListSelector","profileInformationSelector","actualProjectSelector","projectsListSelector","projectsPaginationSizeSelector","totalProjectsCountSelector","tasksListSelector","tasks","tasksList","actualTaskSelector","actualTask","tasksPaginationSizeSelector","totalTasksCountSelector","totalTasksCount","changingDatesListSelector","changingDatesList","connect","selectors","Aside","ProfileChangeForm","setChanging","onSubmitProfileChange","initialFormValues","indexOf","validationFormSchema","values","value","onChange","handleChange","onBlur","handleBlur","display","label","checked","onClick","dateStringFormat","stringDate","Intl","DateTimeFormat","year","month","day","format","dateTimeStringFormat","stringDateTime","hour12","hour","minute","ProfileInfo","Profile","existsFlag","loading","changeAvatarAction","changing","deleteProfile","updateDeveloper","setLoading","deleteDeveloper","logout","avatarStyle","background","height","backgroundSize","flexDirection","justifyContent","e","htmlFor","history","match","changeAvatar","params","useState","setExistsFlag","useEffect","catch","err","alert","message","finally","event","target","files","confirm","push","choice","passed","resolve","SingleProject","projectLead","parse","totalCount","rootValue","pagesRadiusArray","countOfPages","Math","ceil","endOfIteration","i","disabled","map","pageItem","ProjectsSearchForm","onSubmitSearchProject","Projects","totalPagesCount","project","project_id","project_title","project_description","project_deadline","lead","getProjects","getProjectsCount","undefined","searchTitle","setSearchTitle","getState","project_lead_id","getDevelopersProjects","getDevelopersProjectsCount","DeveloperSearchForm","onSubmitSearchDevelopers","SingleDeveloper","deleteDeveloperAction","src","alt","Developers","rootPath","AddDeveloper","onSubmitAddDeveloperCreator","accessRights","onSubmitAddDeveloper","developer","developer_id","getDevelopers","getTotalCount","searchEmail","setSearchEmail","searchSurname","setSearchSurname","onSubmitPutDeveloper","WorkWithProjectForm","min","projectLeadEmail","SingleNotification","deleteNotificationAction","updateNotification","isChanging","setIsChanging","contentValue","setContentValue","areaError","setAreaError","autoFocus","onDoubleClick","AddNotificationForm","onSubmitPutNotification","Notification","isAdding","setIsAdding","updateNotificationActionCreator","notif","notif_sender","notif_content","notif_date","notif_id","NotificationsSide","deleteNotification","getNotifications","getNotificationsCount","getAllNotifications","getAllNotificationsCount","putNotification","getNotificationsCountByDeveloperId","getNotificationsByDeveloperId","AllNotificationsSide","ProjectInfo","deleteAction","getDevelopersByProject","getCountByProject","actualProjectId","WorkWithTaskForm","planned_deadline_date","planned_deadline_time","taskLeadEmail","task_id","TasksSearchForm","onSubmitSearchTasks","SingleTask","actualDeadline","plannedDeadline","AllTasks","task","task_title","task_description","task_actual_deadline","task_planned_deadline","getTasks","getTotalTasksCount","SET_TASKS_LIST","SET_ACTUAL_TASK","SET_TOTAL_TASKS_COUNT","SET_CHANGING_DATES_LIST","setTasksListAC","newTasksList","setTotalTasksCountAC","tasksPagSize","deleteTask","getSingleTask","newActualTask","updateTask","deleteChangingDate","getChangingDates","newChangingDatesList","putChangingDate","updateChangingDate","getDevelopersTasks","getTotalDevelopersTasksCount","projectAccessRights","path","render","ProjectsManage","onSubmitChangeProject","initialValuesChangeProject","initialValuesPutTask","onSubmitPutTask","TasksContainer","getProjectById","deleteProject","changeProject","putTask","WorkWrapper","onSubmitPutProject","initialValuesPutDeveloper","returnProjectAccessRights","projectLeadId","exact","AllNotificationsContainer","putProject","putDeveloper","App","AsideContainer","WorkWrapperContainer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a76030c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_dual_ring\":\"loader_lds_dual_ring__1HEGW\",\"loader_wrapper\":\"loader_loader_wrapper__1_jAw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projects_manage_wrapper\":\"projects_manage_projects_manage_wrapper__FfVp9\",\"projects_nav\":\"projects_manage_projects_nav__3Hdr9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__3Mw9j\",\"text_info\":\"profile_text_info__3EZHk\",\"full_name\":\"profile_full_name__3j5F4\",\"specialty\":\"profile_specialty__1OehI\",\"profile_change_form\":\"profile_profile_change_form__28k5n\",\"profile_btns\":\"profile_profile_btns__1Swiz\",\"avatar_wrapper\":\"profile_avatar_wrapper__1jSW8\",\"file_choicer\":\"profile_file_choicer__38F13\",\"file_choicer_style\":\"profile_file_choicer_style__2GbLm\",\"back_btn\":\"profile_back_btn__3DSzG\",\"change_actions\":\"profile_change_actions__3q7Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_logo\":\"header_header_logo__3j182\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination_wrapper\":\"pagination_pagination_wrapper__18u6w\",\"pagination_item\":\"pagination_pagination_item__3K86-\",\"active\":\"pagination_active__20oos\",\"arrow\":\"pagination_arrow__38mjo\",\"disabled\":\"pagination_disabled__kcKPE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth_form\":\"auth_form_auth_form__2GgfK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"work_with_project_form\":\"work_with_project_form_work_with_project_form__3jT6O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"work_wrapper\":\"work_wrapper_work_wrapper__1slBE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"work_with_tasks_form\":\"work_with_task_form_work_with_tasks_form__2QBoI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all_notifications_wrapper\":\"notifications_all_notifications_wrapper__3ZVXD\",\"add_form\":\"notifications_add_form__1aUDK\",\"notification_wrapper\":\"notifications_notification_wrapper__3Vu6i\",\"notification_header\":\"notifications_notification_header__39H4G\",\"notification_sender\":\"notifications_notification_sender__SFWJb\",\"notification_date\":\"notifications_notification_date__1ZXZp\",\"notification_content\":\"notifications_notification_content__3TPCd\",\"error\":\"notifications_error__3Qfw9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projects_actions_wrapper\":\"all_projects_projects_actions_wrapper__3LfEI\",\"all_projects_wrapper\":\"all_projects_all_projects_wrapper__3_NZT\",\"project_item\":\"all_projects_project_item__3YCvj\",\"expired\":\"all_projects_expired__iw0rO\",\"description\":\"all_projects_description__en5C9\",\"project_lead_name\":\"all_projects_project_lead_name__LPDgt\",\"deadline\":\"all_projects_deadline__1rLyP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"single_developer\":\"developers_single_developer__3g3v7\",\"single_developer_full_name\":\"developers_single_developer_full_name__3RFL6\",\"single_developer_email\":\"developers_single_developer_email__3OvCG\",\"developers_wrapper_actions\":\"developers_developers_wrapper_actions__2fJFm\",\"developer_wrapper\":\"developers_developer_wrapper__3AmLM\",\"delete_btn\":\"developers_delete_btn__Epxfk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task_item\":\"all_tasks_task_item__2-3Dj\",\"task_item_planned\":\"all_tasks_task_item_planned__18etU\",\"task_item_actual\":\"all_tasks_task_item_actual__1RSvp\",\"task_item_description\":\"all_tasks_task_item_description__VqVc5\",\"tasks_actions_wrapper\":\"all_tasks_tasks_actions_wrapper__waMPq\",\"all_tasks_wrapper\":\"all_tasks_all_tasks_wrapper__7NHrc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"project_info\":\"project_info_project_info__1zlkW\",\"project_info_content\":\"project_info_project_info_content__Q4MRN\",\"project_title\":\"project_info_project_title__1WXM4\",\"project_description\":\"project_info_project_description__1At90\",\"project_lead\":\"project_info_project_lead__3Rj83\",\"project_actions\":\"project_info_project_actions__1a6ht\",\"project_deadline\":\"project_info_project_deadline__1Gjbj\"};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios from 'axios'\r\nimport cryptoJS from 'crypto-js'\r\nconst request = axios.create({ baseURL: 'http://localhost:9000/' })\r\n\r\nconst secretKey = 'I want to live in alaska'\r\nconst keyForPasswords = 'Hello from Australia'\r\n\r\n\r\n//Функция, изменяющая имя пользователя по регистру\r\nconst titleItemsChange = (nameItem) => {\r\n    if(!nameItem)\r\n        return ''\r\n    return nameItem.slice(0, 1).toUpperCase() + nameItem.slice(1, nameItem.length).toLowerCase()\r\n}\r\n\r\nexport const changingDatesAPI = {\r\n    getAll(taskId) {\r\n        const url = `changing_dates/get/${taskId}`\r\n        return request.get(url)\r\n    },\r\n\r\n    deleteChangingDate(changingDateId) {\r\n        const url = `changing_dates/delete/${changingDateId}`\r\n        return request.get(url)\r\n    },\r\n\r\n    //В записях нет права изменять даты, только причину (Например в случае опечатки)\r\n    updateChangingDate(changingDateId, cause) {\r\n        const url = `changing_dates/update/${changingDateId}`\r\n        return request.post(url, { cause })\r\n    },\r\n\r\n    putChangingDate(cause, deadlineBefore, deadlineAfter, taskId) {\r\n        const url = 'changing_dates/put'\r\n        return request.post(url, {\r\n            cause,\r\n            deadlineBefore,\r\n            deadlineAfter,\r\n            taskId\r\n        })\r\n    }\r\n}\r\n\r\nexport const projectsAPI = {\r\n    getProjects(page, pagSize, title) {\r\n        const url = title\r\n            ? `projects/get?title=${titleItemsChange(title)}&page=${page - 1}&pagSize=${pagSize}`\r\n            : `projects/get?page=${page - 1}&pagSize=${pagSize}`\r\n        return request.get(url)\r\n    },\r\n    getDevelopersProjects(page, pagSize, developerId, title) {\r\n        const url = title\r\n            ? `projects/get?developerId=${developerId}&title=${titleItemsChange(title)}&page=${page - 1}&pagSize=${pagSize}`\r\n            : `projects/get?developerId=${developerId}&page=${page - 1}&pagSize=${pagSize}`\r\n        return request.get(url)\r\n    },\r\n\r\n    getProjectById(id) {\r\n        const url = `projects/get/${id}`\r\n        return request.get(url)\r\n    },\r\n\r\n    getProjectsCount(title) {\r\n        const url = title\r\n            ? `projects/count?title=${titleItemsChange(title)}`\r\n            : `projects/count`\r\n        return request.get(url)\r\n    },\r\n    getDevelopersProjectCount(developerId, title) {\r\n        const url = title\r\n            ? `projects/count?developerId=${developerId}&title=${titleItemsChange(title)}`\r\n            : `projects/count?developerId=${developerId}`\r\n        return request.get(url)\r\n    },\r\n\r\n    putProject(title, description, deadline, leadId) {\r\n        return request.post('projects/put-project', {\r\n            title: titleItemsChange(title),\r\n            description,\r\n            deadline,\r\n            leadId\r\n        })\r\n    },\r\n\r\n    deleteProject(id) {\r\n        const url  = `projects/delete/${id}`\r\n        return request.get(url)\r\n    },\r\n\r\n    changeProject(id, title, description, deadline, leadId) {\r\n        const url = `projects/update/${id}`\r\n        return request.post(url, {\r\n            title,\r\n            description,\r\n            deadline,\r\n            leadId\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const developersAPI = {\r\n    getAuth(email, pass) {\r\n        const hashPass = encodeURIComponent(cryptoJS.AES.encrypt(pass, keyForPasswords).toString())\r\n        const url = `developers/get_auth`\r\n\r\n        console.log(email)\r\n        console.log(hashPass)\r\n        return request.post(url, {\r\n            email: email,\r\n            password: hashPass\r\n        })\r\n    },\r\n\r\n    getAll(actualPage, paginationSize, email, surname) {\r\n        const hashEmail = encodeURIComponent(cryptoJS.AES.encrypt(email, secretKey).toString())\r\n\r\n        let url = `developers/get?page=${actualPage - 1}&pagSize=${paginationSize}`\r\n        if (surname && email) {\r\n            url = `developers/get?surname=${titleItemsChange(surname)}&email=${hashEmail}&page=${actualPage - 1}&pagSize=${paginationSize}`\r\n        } else if (surname) {\r\n            url = `developers/get?surname=${titleItemsChange(surname)}&page=${actualPage - 1}&pagSize=${paginationSize}`\r\n        } else if (email) {\r\n            url = `developers/get?email=${hashEmail}&page=${actualPage - 1}&pagSize=${paginationSize}`\r\n        }\r\n        return request.get(url)\r\n    },\r\n\r\n    getById(id) {\r\n        return request.get(`developers/get/${id}`)\r\n    },\r\n\r\n    getByTask(taskId, page, pagSize, email, surname) {\r\n        const hashEmail = encodeURIComponent(cryptoJS.AES.encrypt(email, secretKey).toString())\r\n\r\n        let url = `developers/get_by_task/${taskId}?page=${page - 1}&pagSize=${pagSize}`\r\n        if (surname && email) {\r\n            url = `developers/get_by_task/${taskId}?surname=${titleItemsChange(surname)}&email=${hashEmail}&page=${page - 1}&pagSize=${pagSize}`\r\n        } else if (surname) {\r\n            url = `developers/get_by_task/${taskId}?surname=${titleItemsChange(surname)}&page=${page - 1}&pagSize=${pagSize}`\r\n        } else if (email) {\r\n            url = `developers/get_by_task/${taskId}?email=${hashEmail}&page=${page - 1}&pagSize=${pagSize}`\r\n        }\r\n        return request.get(url)\r\n    },\r\n\r\n    getByProject(projectId, page, pagSize, email, surname) {\r\n        const hashEmail = encodeURIComponent(cryptoJS.AES.encrypt(email, secretKey).toString())\r\n\r\n        let url = `developers/get_by_project/${projectId}?page=${page - 1}&pagSize=${pagSize}`\r\n        if (surname && email) {\r\n            url = `developers/get_by_project/${projectId}?surname=${titleItemsChange(surname)}&email=${hashEmail}&page=${page - 1}&pagSize=${pagSize}`\r\n        } else if (surname) {\r\n            url = `developers/get_by_project/${projectId}?surname=${titleItemsChange(surname)}&page=${page - 1}&pagSize=${pagSize}`\r\n        } else if (email) {\r\n            url = `developers/get_by_project/${projectId}?email=${hashEmail}&page=${page - 1}&pagSize=${pagSize}`\r\n        }\r\n        return request.get(url)\r\n    },\r\n\r\n    updateDeveloper(id, developerData) {\r\n        return request.post(`developers/update/${id}`, {\r\n            ...developerData,\r\n            name: titleItemsChange(developerData.name),\r\n            surname: titleItemsChange(developerData.surname),\r\n            patronymic: titleItemsChange(developerData.patronymic),\r\n            password: encodeURIComponent(cryptoJS.AES.encrypt(developerData.password, keyForPasswords).toString())\r\n        })\r\n    },\r\n\r\n    deleteDeveloper(id) {\r\n        return request.get(`developers/delete/${id}`)\r\n    },\r\n\r\n    putDeveloper(developerData) {\r\n        return request.post('developers/put', {\r\n            ...developerData,\r\n            name: titleItemsChange(developerData.name),\r\n            surname: titleItemsChange(developerData.surname),\r\n            patronymic: titleItemsChange(developerData.patronymic),\r\n            password: encodeURIComponent(cryptoJS.AES.encrypt(developerData.password, keyForPasswords).toString())\r\n        })\r\n    },\r\n\r\n    getDevelopersCount(email, surname) {\r\n        const hashEmail = encodeURIComponent(cryptoJS.AES.encrypt(email, secretKey).toString())\r\n        let url = 'developers/count'\r\n        if (surname && email) {\r\n            url = `developers/count?surname=${titleItemsChange(surname)}&email=${hashEmail}`\r\n        } else if (surname) {\r\n            url = `developers/count?surname=${titleItemsChange(surname)}`\r\n        } else if (email) {\r\n            url = `developers/count?email=${hashEmail}`\r\n        }\r\n        return request.get(url)\r\n    },\r\n\r\n    getDevelopersCountByTask(taskId, email, surname) {\r\n\r\n        const hashEmail = encodeURIComponent(cryptoJS.AES.encrypt(email, secretKey).toString())\r\n        let url = `developers/count_by_task/${taskId}`\r\n        if (surname && email) {\r\n            url = `developers/count_by_task/${taskId}?surname=${titleItemsChange(surname)}&email=${hashEmail}`\r\n        } else if (surname) {\r\n            url = `developers/count_by_task/${taskId}?surname=${titleItemsChange(surname)}`\r\n        } else if (email) {\r\n            url = `developers/count_by_task/${taskId}?email=${hashEmail}`\r\n        }\r\n        return request.get(url)\r\n    },\r\n\r\n    getDevelopersCountByProject(projectId, email, surname) {\r\n        const hashEmail = encodeURIComponent(cryptoJS.AES.encrypt(email, secretKey).toString())\r\n        let url = `developers/count_by_project/${projectId}`\r\n        if (surname && email) {\r\n            url = `developers/count_by_project/${projectId}?surname=${titleItemsChange(surname)}&email=${hashEmail}`\r\n        } else if (surname) {\r\n            url = `developers/count_by_project/${projectId}?surname=${titleItemsChange(surname)}`\r\n        } else if (email) {\r\n            url = `developers/count_by_project/${projectId}?email=${hashEmail}`\r\n        }\r\n        return request.get(url)\r\n    },\r\n\r\n    async checkEmail(email, id) {\r\n        const hashEmail = encodeURIComponent(cryptoJS.AES.encrypt(email, secretKey).toString())\r\n        let url = `developers/checkEmail/${hashEmail}/${id}`\r\n        return (await request.get(url)).data\r\n    },\r\n\r\n    async checkByDeveloper(email) {\r\n        const hashEmail = encodeURIComponent(cryptoJS.AES.encrypt(email, secretKey).toString())\r\n        let url = `developers/check-by-developer/${hashEmail}`\r\n        return (await request.get(url)).data\r\n    },\r\n\r\n    async changeAvatar(id, file) {\r\n\r\n        const fd = new FormData()\r\n        fd.append('image', file, `${Date.now()}_${file.name}`)\r\n\r\n        let url = `http://localhost:9000/developers/put-avatar/${id}`\r\n\r\n        //Используется нативный fetch из-за несовместимости библиотеки multer(для работы с изображением) и axios\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            body: fd\r\n        })\r\n    }\r\n}\r\n\r\nexport const notificationsAPI = {\r\n\r\n    getAllNotifications(page, pagSize) {\r\n        const url = `notifications/get_all?page=${page - 1}&pagSize=${pagSize}`\r\n        return request.get(url)\r\n    },\r\n\r\n    getDevelopersNotifications(developerId, page, pagSize) {\r\n        const url = `notifications/get_by_developer/${developerId}?page=${page - 1}&pagSize=${pagSize}`\r\n        return request.get(url)\r\n    },\r\n\r\n    getAllNotificationsCount() {\r\n        const url = 'notifications/all_count'\r\n        return request.get(url)\r\n    },\r\n\r\n    getDevelopersNotificationsCount(developerId) {\r\n        const url = `notifications/count_by_developer/${developerId}`\r\n        return request.get(url)\r\n    },\r\n\r\n    getNotificationsByTaskId(taskId, page, pagSize) {\r\n        const url = `notifications/get/${taskId}?page=${page - 1}&pagSize=${pagSize}`\r\n        return request.get(url)\r\n    },\r\n\r\n    getNotificationsCountByTaskId(taskId) {\r\n        const url = `notifications/count/${taskId}`\r\n        return request.get(url)\r\n    },\r\n\r\n    deleteNotification(notificationId) {\r\n        const url = `notifications/delete/${notificationId}`\r\n        return request.get(url)\r\n    },\r\n\r\n    putNotification(sender, content, date, taskId) {\r\n        const url = `notifications/put_notification`\r\n        return request.post(url, {\r\n            sender,\r\n            content,\r\n            date,\r\n            taskId\r\n        })\r\n    },\r\n\r\n    updateNotification(notificationId, content) {\r\n        const url = `notifications/update_notification/${notificationId}`\r\n        return request.post(url, { content })\r\n    }\r\n}\r\n\r\nexport const tasksAPI = {\r\n    getTasks(projectId, title, page, pagSize) {\r\n        const url = title\r\n            ? `tasks/get/${projectId}?title=${title}&page=${page - 1}&pagSize=${pagSize}`\r\n            : `tasks/get/${projectId}?page=${page - 1}&pagSize=${pagSize}`\r\n\r\n        return request.get(url)\r\n\r\n    },\r\n    getDevelopersTasks(projectId, title, page, pagSize, developerId) {\r\n        const url = title\r\n            ? `tasks/get/${projectId}?developerId=${developerId}&title=${title}&page=${page - 1}&pagSize=${pagSize}`\r\n            : `tasks/get/${projectId}?developerId=${developerId}&page=${page - 1}&pagSize=${pagSize}`\r\n\r\n        return request.get(url)\r\n\r\n    },\r\n\r\n    getTask(taskId) {\r\n        const url = `tasks/get_single/${taskId}`\r\n\r\n        return request.get(url)\r\n    },\r\n\r\n    getCount(projectId, title) {\r\n        const url = title\r\n            ? `tasks/count/${projectId}?title=${title}`\r\n            : `tasks/count/${projectId}`\r\n\r\n        return request.get(url)\r\n    },\r\n    getDevelopersTasksCount(projectId, title, developerId) {\r\n        const url = title\r\n            ? `tasks/count/${projectId}?developerId=${developerId}&title=${title}`\r\n            : `tasks/count/${projectId}?developerId=${developerId}`\r\n\r\n        return request.get(url)\r\n    },\r\n\r\n    deleteTask(taskId) {\r\n        const url = `tasks/delete/${taskId}`\r\n\r\n        return request.get(url)\r\n    },\r\n\r\n    updateTask(taskId, title, description, results, leadId) {\r\n        const url = `tasks/update/${taskId}`\r\n        return request.post(url, {\r\n            title,\r\n            description,\r\n            results,\r\n            leadId\r\n        })\r\n    },\r\n\r\n    putTask(title, description, results, actualDeadline, plannedDeadline, leadId, projectId) {\r\n        const url = `tasks/put`\r\n\r\n        return request.post(url, {\r\n            title,\r\n            description,\r\n            results,\r\n            actualDeadline,\r\n            plannedDeadline,\r\n            leadId,\r\n            projectId\r\n        })\r\n    },\r\n\r\n    deleteDeveloperFromTask(taskId, developerId) {\r\n        const url = `tasks/delete_developer/${taskId}/${developerId}`\r\n        return request.get(url)\r\n    },\r\n\r\n    putDeveloperToTask(taskId, developerId) {\r\n        const url = `tasks/add_developer`\r\n        return request.post(url, {\r\n            taskId,\r\n            developerId\r\n        })\r\n    }\r\n}","export function successResponseCondition(status, errMessage) {\r\n    return status >= 200 && status < 300 && !errMessage\r\n}","import {developersAPI} from '../../api'\r\nimport {successResponseCondition} from '../utils'\r\n\r\nconst SET_AUTH_ID = 'SET_AUTH_ID'\r\nconst SET_ADMIN_RULES = 'SET_ADMIN_RULES'\r\n\r\nconst defaultState = {\r\n    authId: null,\r\n    isAdmin: false\r\n}\r\n\r\nexport default function authReducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case (SET_ADMIN_RULES): {\r\n            return {\r\n                ...state,\r\n                isAdmin: action.isAdmin\r\n            }\r\n        }\r\n        case (SET_AUTH_ID): {\r\n            return {\r\n                ...state,\r\n                authId: action.authId\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nfunction setAuthId(authId) {\r\n    return {\r\n        type: SET_AUTH_ID,\r\n        authId\r\n    }\r\n}\r\nfunction setAdminRulesAC(isAdmin) {\r\n    return {\r\n        type: SET_ADMIN_RULES,\r\n        isAdmin\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return dispatch => {\r\n        dispatch(setAuthId(null))\r\n        dispatch(setAdminRulesAC(false))\r\n    }\r\n}\r\n\r\nexport function auth(email, pass) {\r\n    return async dispatch => {\r\n        const response = await developersAPI.getAuth(email, pass)\r\n\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            if(response.data.length !== 0) {\r\n                dispatch(setAuthId(response.data[0].developer_id))\r\n                dispatch(setAdminRulesAC(!!response.data[0].developer_is_admin))\r\n            } else {\r\n                return Promise.reject(new Error('Неверный логин или пароль'))\r\n            }\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}","import {developersAPI} from '../../api/index'\r\nimport {successResponseCondition} from '../utils/index'\r\n\r\nconst SET_DEVELOPERS_LIST = 'SET_DEVELOPERS_LIST'\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT'\r\n\r\nconst defaultState = {\r\n    developersList: [],\r\n    totalDevelopersCount: null,\r\n    paginationSize: 5,\r\n\r\n    //Коды справочной сущности для сопоставления кода и его данных\r\n    positionCodes: [\r\n        'Developer',\r\n        'QA Developer',\r\n        'Frontend Developer',\r\n        'Backend Developer',\r\n        'Fullstack Developer',\r\n        'Data scientist',\r\n        'iOS developer',\r\n        'Android developer',\r\n        'System administrator'\r\n    ],\r\n    specialtyCodes: [\r\n        'Trainee',\r\n        'Junior',\r\n        'Middle',\r\n        'Senior',\r\n        'Technical Director'\r\n    ]\r\n}\r\n\r\nexport default function developersReducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case (SET_DEVELOPERS_LIST): {\r\n            return {\r\n                ...state,\r\n                developersList: action.newDevelopersList\r\n            }\r\n        }\r\n        case (SET_TOTAL_COUNT): {\r\n            return {\r\n                ...state,\r\n                totalDevelopersCount: action.newTotalCount\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nfunction setDevelopersListAC(newDevelopersList) {\r\n    return {\r\n        type: SET_DEVELOPERS_LIST,\r\n        newDevelopersList\r\n    }\r\n}\r\nfunction setTotalCount(newTotalCount) {\r\n    return {\r\n        type: SET_TOTAL_COUNT,\r\n        newTotalCount\r\n    }\r\n}\r\n\r\nexport function getDevelopers(actualPage, email, surname) {\r\n    return async (dispatch, getState) => {\r\n        const response = await developersAPI.getAll(actualPage, getState().developers.paginationSize, email, surname)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            dispatch(setDevelopersListAC(response.data))\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateDeveloper(id, developerData) {\r\n    return async (dispatch) => {\r\n        const response = await developersAPI.updateDeveloper(id, developerData)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteDeveloper(id) {\r\n    return async (dispatch) => {\r\n        const response = await developersAPI.deleteDeveloper(id)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function putDeveloper(developerData) {\r\n    return async (dispatch) => {\r\n        const response = await developersAPI.putDeveloper(developerData)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function getTotalCount(email, surname) {\r\n    return async (dispatch) => {\r\n        const response = await developersAPI.getDevelopersCount(email, surname)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            const totalCount = response.data[0]['COUNT(*)']\r\n            dispatch(setTotalCount(totalCount))\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function getDevelopersByTask(taskId, page, email, surname) {\r\n    return async (dispatch, getState) => {\r\n        const response = await developersAPI.getByTask(taskId, page, getState().developers.paginationSize, email, surname)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            dispatch(setDevelopersListAC(response.data))\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\nexport function getDevelopersByProject(projectId, page, email, surname) {\r\n    return async (dispatch, getState) => {\r\n        const response = await developersAPI.getByProject(projectId, page, getState().developers.paginationSize, email, surname)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            dispatch(setDevelopersListAC(response.data))\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\nexport function getCountByTask(taskId, email, surname) {\r\n    return async (dispatch) => {\r\n        const response = await developersAPI.getDevelopersCountByTask(taskId, email, surname)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            const totalCount = response.data[0]['COUNT(*)']\r\n            dispatch(setTotalCount(totalCount))\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\nexport function getCountByProject(projectId, email, surname) {\r\n    return async (dispatch) => {\r\n        const response = await developersAPI.getDevelopersCountByProject(projectId, email, surname)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            const totalCount = response.data[0]['COUNT(*)']\r\n            dispatch(setTotalCount(totalCount))\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n","import {successResponseCondition} from '../utils'\r\nimport {notificationsAPI} from '../../api'\r\n\r\nconst SET_NOTIFICATIONS_LIST = 'SET_NOTIFICATIONS_LIST'\r\nconst SET_TOTAL_NOTIFICATIONS_COUNT = 'SET_TOTAL_NOTIFICATIONS_COUNT'\r\n\r\nconst defaultState = {\r\n    notificationsList: [],\r\n    totalNotificationsCount: null,\r\n    paginationSize: 10\r\n}\r\n\r\nexport default function notificationsReducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case(SET_NOTIFICATIONS_LIST): {\r\n            return {\r\n                ...state,\r\n                notificationsList: action.newNotificationsList\r\n            }\r\n        }\r\n        case(SET_TOTAL_NOTIFICATIONS_COUNT): {\r\n            return {\r\n                ...state,\r\n                totalNotificationsCount: action.newTotalCount\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nfunction setNotificationsListAC(newNotificationsList) {\r\n    return {\r\n        type: SET_NOTIFICATIONS_LIST,\r\n        newNotificationsList\r\n    }\r\n}\r\n\r\nfunction setTotalNotificationsCount(newTotalCount) {\r\n    return {\r\n        type: SET_TOTAL_NOTIFICATIONS_COUNT,\r\n        newTotalCount\r\n    }\r\n}\r\n\r\nexport function getAllNotifications(page) {\r\n    return async (dispatch, getState) => {\r\n        const response = await notificationsAPI.getAllNotifications(page, getState().notifications.paginationSize)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            dispatch(setNotificationsListAC(response.data))\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function getNotificationsByTaskId(taskId, page) {\r\n    return async (dispatch, getState) => {\r\n        const response = await notificationsAPI.getNotificationsByTaskId(taskId, page, getState().notifications.paginationSize)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            dispatch(setNotificationsListAC(response.data))\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function getNotificationsByDeveloperId(developerId, page) {\r\n    return async (dispatch, getState) => {\r\n        const response = await notificationsAPI.getDevelopersNotifications(developerId, page, getState().notifications.paginationSize)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            dispatch(setNotificationsListAC(response.data))\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function getAllNotificationsCount() {\r\n    return async (dispatch) => {\r\n        const response = await notificationsAPI.getAllNotificationsCount()\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            dispatch(setTotalNotificationsCount(response.data[0]['COUNT(*)']))\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function getNotificationsCountByTaskId(taskId) {\r\n    return async (dispatch) => {\r\n        const response = await notificationsAPI.getNotificationsCountByTaskId(taskId)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            dispatch(setTotalNotificationsCount(response.data[0]['COUNT(*)']))\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function getNotificationsCountByDeveloperId(developerId) {\r\n    return async (dispatch) => {\r\n        const response = await notificationsAPI.getDevelopersNotificationsCount(developerId)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            dispatch(setTotalNotificationsCount(response.data[0]['COUNT(*)']))\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteNotification(notificationId) {\r\n    return async dispatch => {\r\n        const response = await notificationsAPI.deleteNotification(notificationId)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function putNotification(sender, content, date, taskId) {\r\n    return async dispatch => {\r\n        const response = await notificationsAPI.putNotification(\r\n            sender,\r\n            content,\r\n            date,\r\n            taskId\r\n        )\r\n        debugger\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateNotification(notificationId, content) {\r\n    return async dispatch => {\r\n        const response = await notificationsAPI.updateNotification(\r\n            notificationId,\r\n            content\r\n        )\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {developersAPI} from '../../api/index'\r\nimport {successResponseCondition} from '../utils'\r\n\r\nconst SET_PROFILE_INFORMATION = 'SET_PROFILE_INFORMATION'\r\n\r\nconst defaultState = {\r\n    profileInformation: {}\r\n}\r\n\r\nexport default function profileReducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case (SET_PROFILE_INFORMATION): {\r\n            return {\r\n                ...state,\r\n                profileInformation: {...action.newProfileInformation}\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nfunction setProfileInformation(newProfileInformation) {\r\n    return {\r\n        type: SET_PROFILE_INFORMATION,\r\n        newProfileInformation\r\n    }\r\n}\r\n\r\nexport function getProfile(id) {\r\n    return async (dispatch) => {\r\n\r\n        const response = await developersAPI.getById(id)\r\n\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            if(response.data[0]) {\r\n                const candidate = response.data[0]\r\n                dispatch(setProfileInformation({\r\n                    name: candidate.developer_name,\r\n                    surname: candidate.developer_surname,\r\n                    patronymic: candidate.developer_patronymic,\r\n                    position: candidate.developer_position,\r\n                    birth: candidate.developer_birth,\r\n                    avatarURL: candidate.developer_avatar_url,\r\n                    email: candidate.developer_email,\r\n                    password: candidate.developer_password,\r\n                    specialty: candidate.developer_specialty,\r\n                    isAdmin: candidate.developer_is_admin\r\n                }))\r\n            } else {\r\n                return Promise.reject(new Error(response.data.errMessage))\r\n            }\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function changeAvatar(id, file) {\r\n    return async (dispatch) => {\r\n        const response = await developersAPI.changeAvatar(id, file)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            return dispatch(getProfile(id))\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}","import {projectsAPI, developersAPI} from '../../api'\r\nimport {successResponseCondition} from '../utils'\r\n\r\nconst SET_PROJECTS_LIST = 'SET_PROJECTS_LIST'\r\nconst SET_TOTAL_PROJECTS_COUNT = 'SET_TOTAL_PROJECTS_COUNT'\r\nconst SET_ACTUAL_PROJECT = 'SET_ACTUAL_PROJECT'\r\n\r\nconst defaultState = {\r\n    projectsList: [],\r\n    totalProjectsCount: null,\r\n    paginationSize: 4,\r\n    actualProject: null\r\n}\r\n\r\nexport default function projectReducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case (SET_PROJECTS_LIST): {\r\n            return {\r\n                ...state,\r\n                projectsList: action.newProjectsList\r\n            }\r\n        }\r\n        case (SET_TOTAL_PROJECTS_COUNT): {\r\n            return {\r\n                ...state,\r\n                totalProjectsCount: action.projectsCount\r\n            }\r\n        }\r\n        case (SET_ACTUAL_PROJECT) : {\r\n            return {\r\n                ...state,\r\n                actualProject: action.actualProjectObject\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nfunction setProjectsList(newProjectsList) {\r\n    return {\r\n        type: SET_PROJECTS_LIST,\r\n        newProjectsList\r\n    }\r\n}\r\nfunction setTotalProjectsCount(projectsCount) {\r\n    return {\r\n        type: SET_TOTAL_PROJECTS_COUNT,\r\n        projectsCount\r\n    }\r\n}\r\nfunction setActualProject(actualProjectObject) {\r\n    return {\r\n        type: SET_ACTUAL_PROJECT,\r\n        actualProjectObject\r\n    }\r\n}\r\n\r\n\r\nexport function getProjectsCount(title) {\r\n    return async (dispatch) => {\r\n        const response = await projectsAPI.getProjectsCount(title)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            dispatch(setTotalProjectsCount(response.data[0]['COUNT(*)']))\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\nexport function getDevelopersProjectsCount(title, developerId) {\r\n    return async (dispatch) => {\r\n        const response = await projectsAPI.getDevelopersProjectCount(developerId, title)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            dispatch(setTotalProjectsCount(response.data[0]['COUNT(*)']))\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function getProjects(page, title) {\r\n    return async (dispatch, getState) => {\r\n        const response = await projectsAPI.getProjects(page, getState().projects.paginationSize, title)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n\r\n            //Раскрытие данных лидеров проектов из id лидеров\r\n            for(let project of response.data) {\r\n                if(project.project_lead_id) {\r\n                    const lead = await developersAPI.getById(project.project_lead_id)\r\n                    if(successResponseCondition(lead.status, lead.data.errMessage))\r\n                        project.lead = lead.data[0]\r\n                    else\r\n                        return Promise.reject(new Error('No data of lead'))\r\n                }\r\n            }\r\n            dispatch(setProjectsList(response.data))\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\nexport function getDevelopersProjects(page, title, developerId) {\r\n    return async (dispatch, getState) => {\r\n        const response = await projectsAPI.getDevelopersProjects(page, getState().projects.paginationSize, developerId, title)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n\r\n            //Раскрытие данных лидеров проектов из id лидеров\r\n            for(let project of response.data) {\r\n                if(project.project_lead_id) {\r\n                    const lead = await developersAPI.getById(project.project_lead_id)\r\n                    if(successResponseCondition(lead.status, lead.data.errMessage))\r\n                        project.lead = lead.data[0]\r\n                    else\r\n                        return Promise.reject(new Error('No data of lead'))\r\n                }\r\n            }\r\n            dispatch(setProjectsList(response.data))\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function getProjectById(id) {\r\n    return async dispatch => {\r\n        const response = await projectsAPI.getProjectById(id)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            if(response.data[0]) {\r\n\r\n                //Получение лидера проекта из его id и добавление данных о нем\r\n                if(response.data[0].project_lead_id) {\r\n                    const lead = await developersAPI.getById(response.data[0].project_lead_id)\r\n                    if(successResponseCondition(lead.status, lead.data.errMessage))\r\n                        response.data[0].lead = lead.data[0]\r\n                    else\r\n                        return Promise.reject(new Error(response.data.errMessage))\r\n                }\r\n\r\n                dispatch(setActualProject(response.data[0]))\r\n            } else\r\n                return Promise.reject(new Error('No data of lead'))\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function putProject(title, description, deadline, leadId) {\r\n    return async dispatch => {\r\n        const response = await projectsAPI.putProject(title, description, deadline, leadId)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteProject(id) {\r\n    return async dispatch => {\r\n        const response = await projectsAPI.deleteProject(id)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function changeProject(id, title, description, deadline, leadId) {\r\n    return async dispatch => {\r\n        const response = await projectsAPI.changeProject(id, title, description, deadline, leadId)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}","import {createStore, compose, applyMiddleware, combineReducers} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport authReducer from './reducers/auth_reducer'\r\nimport developersReducer from \"./reducers/developers_reducer\";\r\nimport notificationsReducer from \"./reducers/notification_reducer\";\r\nimport profileReducer from \"./reducers/profile_reducer\";\r\nimport projectReducer from \"./reducers/projects_reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    projects: projectReducer,\r\n    developers: developersReducer,\r\n    notifications: notificationsReducer,\r\n    profile: profileReducer\r\n})\r\n\r\n// Выбирается функция compose в зависимости от наличия плагина Redux DevTools\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\nexport {store}","import React from 'react'\r\nimport * as style from './loader.module.css'\r\n\r\nexport default function Loader() {\r\n    return <div className={style.loader_wrapper}>\r\n            <div className={style.lds_dual_ring} />\r\n        </div>\r\n}","import React from 'react'\r\nimport * as style from './header.module.css'\r\n\r\nexport default function Header({headerLogo}) {\r\n    return <header>\r\n            <div className={style.header_logo}>\r\n                {headerLogo}\r\n            </div>\r\n        </header>\r\n}","import React from 'react'\r\nimport {useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport * as style from './auth_form.module.css'\r\n\r\nexport default function AuthForm(props) {\r\n    const {onSubmitAuth} = props\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            login: '',\r\n            password: ''\r\n        },\r\n        validationSchema: Yup.object({\r\n            login: Yup.string().max(50, 'Email must be less then 50 symbols').required('Please, enter email'),\r\n            password: Yup.string().max(150, 'Password must be less then 150 symbols').required('You must enter password')\r\n        }),\r\n        onSubmit: onSubmitAuth\r\n    })\r\n\r\n    return <form onSubmit={formik.handleSubmit} className={style.auth_form}>\r\n        <h1>ITime</h1>\r\n        <input\r\n            type=\"text\"\r\n            autoComplete='off'\r\n            placeholder='Enter login'\r\n            id='login'\r\n            {...formik.getFieldProps('login')}\r\n        />\r\n        {\r\n            formik.errors.login && formik.touched.login\r\n                ? <p className='validation_error'>{formik.errors.login}</p>\r\n                : null\r\n        }\r\n        <input\r\n            type=\"password\"\r\n            autoComplete='off'\r\n            placeholder='Enter password'\r\n            id='password'\r\n            {...formik.getFieldProps('password')}\r\n        />\r\n        {\r\n            formik.errors.password && formik.touched.password\r\n                ? <p className='validation_error'>{formik.errors.password}</p>\r\n                : null\r\n        }\r\n        <button\r\n            className='primary-btn'\r\n        >Login</button>\r\n    </form>\r\n}","import React from 'react'\r\nimport {NavLink, withRouter} from 'react-router-dom'\r\n\r\n//Стили неявно используются\r\nimport * as style from './aside.module.css'\r\n\r\nfunction Aside({accessRight, location}) {\r\n    return (\r\n        <aside>\r\n            <ul>\r\n                <NavLink to='/profile/'><li>Profile</li></NavLink>\r\n                <NavLink\r\n                    to='/projects/1'\r\n                    className={\r\n                        location.pathname.includes('put-project')\r\n                        || location.pathname.includes('projects')\r\n                        || location.pathname.includes('single_project')\r\n                            ? 'active'\r\n                            : ''\r\n                    }>\r\n                    <li>Projects</li>\r\n                </NavLink>\r\n                {\r\n                    accessRight\r\n                        ? <NavLink\r\n                            to='/developers/1'\r\n                            className={location.pathname.includes('/developers/') ? 'active' : ''}\r\n                        ><li>Developers</li></NavLink>\r\n                        : null\r\n                }\r\n                <NavLink\r\n                    to='/notifications/1'\r\n                    className={location.pathname.includes('/notifications/') ? 'active' : ''}\r\n                >\r\n                    <li>Notifications</li>\r\n                </NavLink>\r\n            </ul>\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default withRouter(Aside)","export const authIdSelector = (state) => state.auth.authId\r\n\r\nexport const isAdminSelector = (state) => state.auth.isAdmin\r\n\r\nexport const totalNotificationsCountSelector = (state) => state.notifications.totalNotificationsCount\r\n\r\nexport const notificationsListSelector = (state) => state.notifications.notificationsList\r\n\r\nexport const notificationsPaginationSize = (state) => state.notifications.paginationSize\r\n\r\n//Селекторы разработчиков\r\nexport const positionCodesSelector = (state) => state.developers.positionCodes\r\n\r\nexport const specialtyCodesSelector = (state) => state.developers.specialtyCodes\r\n\r\nexport const totalDevelopersCountSelector = (state) => state.developers.totalDevelopersCount\r\n\r\nexport const paginationSizeDevelopersSelector = (state) => state.developers.paginationSize\r\n\r\nexport const developersListSelector = (state) => state.developers.developersList\r\n\r\n//Селекторы профиля\r\nexport const profileInformationSelector = (state) => state.profile.profileInformation\r\n\r\n\r\n//Селекторы проектов\r\nexport const actualProjectSelector = (state) => state.projects.actualProject\r\n\r\nexport const projectsListSelector = (state) => state.projects.projectsList\r\n\r\nexport const projectsPaginationSizeSelector = (state) => state.projects.paginationSize\r\n\r\nexport const totalProjectsCountSelector = (state) => state.projects.totalProjectsCount\r\n\r\n\r\n//Селекторы задач\r\nexport const tasksListSelector = (state) => state.tasks.tasksList\r\n\r\nexport const actualTaskSelector = (state) => state.tasks.actualTask\r\n\r\nexport const tasksPaginationSizeSelector = (state) => state.tasks.paginationSize\r\n\r\nexport const totalTasksCountSelector = (state) => state.tasks.totalTasksCount\r\n\r\nexport const changingDatesListSelector = (state) => state.tasks.changingDatesList\r\n","import Aside from './Aside'\r\nimport {connect} from 'react-redux'\r\nimport * as selectors from '../../../redux/selectors'\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return { accessRight: selectors.isAdminSelector(state) }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(Aside)","import React from 'react'\r\nimport {useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport * as style from '../profile.module.css'\r\n\r\nexport default function ProfileChangeForm(props) {\r\n\r\n    const {\r\n        profileInformation,\r\n        setChanging,\r\n        isAdmin,\r\n        positionCodes,\r\n        specialtyCodes,\r\n        onSubmitProfileChange\r\n    } = props\r\n\r\n    //Здесь и далее 2 варианта изменений - поверхностный и глубокий. Первый - для администраторов,\r\n    // второй - для обычных пользователей\r\n    const initialFormValues = isAdmin\r\n        ? {\r\n            name: profileInformation.name,\r\n            surname: profileInformation.surname,\r\n            patronymic: profileInformation.patronymic,\r\n            birth: profileInformation.birth.slice(0, profileInformation.birth.indexOf('T')),\r\n            email: profileInformation.email,\r\n            position: positionCodes.indexOf(profileInformation.position),\r\n            specialty: specialtyCodes.indexOf(profileInformation.specialty),\r\n            isAdmin: !!profileInformation.isAdmin\r\n        }\r\n        : {\r\n            name: profileInformation.name,\r\n            surname: profileInformation.surname,\r\n            patronymic: profileInformation.patronymic,\r\n            birth: profileInformation.birth.slice(0, profileInformation.birth.indexOf('T')),\r\n            email: profileInformation.email\r\n        }\r\n    const validationFormSchema = isAdmin\r\n        ? Yup.object({\r\n            name: Yup.string().required('Fill out the required field'),\r\n            surname: Yup.string().required('Fill out the required field'),\r\n            birth: Yup.date('Invalid date').max(new Date(), 'Invalid birth date').required('Fill out the required field'),\r\n            email: Yup.string().email('Invalid email').required('Fill out the required field')\r\n        })\r\n        : Yup.object({\r\n            name: Yup.string().required('Fill out the required field'),\r\n            surname: Yup.string().required('Fill out the required field'),\r\n            birth: Yup.date('Invalid date').required('Fill out the required field'),\r\n            email: Yup.string().email('Fill out the required field')\r\n        })\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialFormValues,\r\n        validationSchema: validationFormSchema,\r\n        onSubmit(values) {\r\n            onSubmitProfileChange(values)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} className={style.profile_change_form}>\r\n            <input\r\n                type='text'\r\n                id='name'\r\n                autoComplete='off'\r\n                {...formik.getFieldProps('name')}\r\n            />\r\n            {formik.errors.name ? <div className='validation_error'>{formik.errors.name}</div> : null}\r\n            <input\r\n                type='text'\r\n                id='surname'\r\n                autoComplete='off'\r\n                {...formik.getFieldProps('surname')}\r\n            />\r\n            {formik.errors.surname ? <div className='validation_error'>{formik.errors.surname}</div> : null}\r\n            <input\r\n                type='text'\r\n                id='patronymic'\r\n                autoComplete='off'\r\n                {...formik.getFieldProps('patronymic')}\r\n            />\r\n            <input\r\n                type='date'\r\n                id='birth'\r\n                {...formik.getFieldProps('birth')}\r\n            />\r\n            {formik.errors.birth ? <div className='validation_error'>{formik.errors.birth}</div> : null}\r\n            <input\r\n                type='email'\r\n                id='email'\r\n                autoComplete='off'\r\n                {...formik.getFieldProps('email')}\r\n            />\r\n            {formik.errors.email ? <div className='validation_error'>{formik.errors.email}</div> : null}\r\n            {\r\n                isAdmin\r\n                    ? <>\r\n                        <select\r\n                            name=\"position\"\r\n                            value={formik.values.position}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{ display: 'block' }}\r\n                        >\r\n                            <option value='0' label='Developer'/>\r\n                            <option value='1' label='QA Developer'/>\r\n                            <option value='2' label='Frontend Developer'/>\r\n                            <option value='3' label='Backend Developer'/>\r\n                            <option value='4' label='Fullstack Developer'/>\r\n                            <option value='5' label='Data scientist'/>\r\n                            <option value='6' label='iOS developer'/>\r\n                            <option value='7' label='Android developer'/>\r\n                            <option value='8' label='System administrator'/>\r\n                        </select>\r\n\r\n                        <select\r\n                            name=\"specialty\"\r\n                            value={formik.values.specialty}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            style={{ display: 'block' }}\r\n                        >\r\n                            <option value='0' label='Trainee'/>\r\n                            <option value='1' label='Junior'/>\r\n                            <option value='2' label='Middle'/>\r\n                            <option value='3' label='Senior'/>\r\n                            <option value='4' label='Technical Director'/>\r\n                        </select>\r\n\r\n                        <div>\r\n                            <span>Is admin: </span>\r\n                            <input\r\n                                type='checkbox'\r\n                                id='isAdmin'\r\n                                {...formik.getFieldProps('isAdmin')}\r\n                                checked={formik.getFieldProps('isAdmin').value}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                    : null\r\n            }\r\n            <div className={style.change_actions}>\r\n                <button type='submit' className='primary-btn'>Save</button>\r\n                <button type='button' onClick={() => setChanging(false)} className={style.back_btn}>Back</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","// Форматирование даты\r\nexport function dateStringFormat(stringDate) {\r\n    const date = new Date(stringDate)\r\n\r\n    const formatter = new Intl.DateTimeFormat(\"en\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        day: \"numeric\"\r\n    })\r\n\r\n    return formatter.format(date)\r\n}\r\n\r\n// Форматирование даты и времени\r\nexport function dateTimeStringFormat(stringDateTime) {\r\n    const date = new Date(stringDateTime)\r\n\r\n    const formatter = new Intl.DateTimeFormat(\"en\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n        hour12: false,\r\n        hour: \"numeric\",\r\n        minute: \"numeric\"\r\n    })\r\n\r\n    return formatter.format(date)\r\n}","import React from 'react'\r\nimport {dateStringFormat} from '../../../../utils/formats'\r\nimport * as style from '../profile.module.css'\r\n\r\nexport default function ProfileInfo({profileInformation}) {\r\n    return (\r\n        <div className={style.text_info}>\r\n            <p className={style.full_name}>\r\n                <b>{profileInformation.name} {profileInformation.surname} {profileInformation.patronymic}</b>\r\n            </p>\r\n            <p className={style.specialty}>\r\n                {profileInformation.position} {profileInformation.specialty}\r\n            </p>\r\n            <p>\r\n\r\n                Date of birth: <b>{\r\n                profileInformation.birth\r\n                    ? dateStringFormat(profileInformation.birth)\r\n                    : null\r\n            }</b>\r\n            </p>\r\n            <p>\r\n                Email: <b>{profileInformation.email}</b>\r\n            </p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport Loader from '../../../utils_components/Loader'\r\nimport ProfileChangeForm from './profile_info_block/ProfileChangeForm'\r\nimport ProfileInfo from './profile_info_block/ProfileInfo'\r\nimport * as style from './profile.module.css'\r\n\r\nexport default function Profile(props) {\r\n\r\n    const {\r\n        existsFlag,\r\n        loading,\r\n        id,\r\n        authId,\r\n        isAdmin,\r\n        changeAvatarAction,\r\n        changing,\r\n        setChanging,\r\n        deleteProfile,\r\n        profileInformation,\r\n        updateDeveloper,\r\n        setLoading,\r\n        deleteDeveloper,\r\n        getProfile,\r\n        positionCodes,\r\n        specialtyCodes,\r\n        onSubmitProfileChange,\r\n        logout\r\n    } = props\r\n\r\n    const avatarStyle = {\r\n        background: `no-repeat center url(${profileInformation.avatarURL})`,\r\n        height: '300px',\r\n        backgroundSize: 'cover',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-end',\r\n    }\r\n\r\n    if(!existsFlag)\r\n        return <Redirect to='/profile/'/>\r\n    if(loading) {\r\n        return <Loader />\r\n    } else\r\n        return (\r\n            <div className={style.profile}>\r\n                <div className={style.avatar_wrapper}>\r\n                    <div style={avatarStyle}>\r\n                        {\r\n                            //Проверка на возможность изменения аватарки\r\n                            id === authId || isAdmin\r\n                                ? <>\r\n                                    <input\r\n                                        id='file'\r\n                                        type=\"file\"\r\n                                        className={style.file_choicer}\r\n                                        onChange={(e) => changeAvatarAction(e)}\r\n                                    />\r\n                                    <label htmlFor=\"file\" className={style.file_choicer_style}>Change photo</label>\r\n                                </>\r\n                                : null\r\n                        }\r\n                    </div>\r\n                    {\r\n                        changing\r\n                            ? null\r\n                            : <div className={style.profile_btns}>\r\n                                {\r\n                                    //Проверка на возможность действий на странице\r\n                                    id === authId || isAdmin\r\n                                        ? <>\r\n                                            <button\r\n                                                type='button'\r\n                                                className='primary-btn'\r\n                                                onClick={() => setChanging(true)}>Change profile\r\n                                            </button>\r\n                                            <button\r\n                                                type='button'\r\n                                                className='primary-btn'\r\n                                                onClick={() => {\r\n                                                    if(id === authId)\r\n                                                        logout()\r\n                                                    deleteProfile(id)\r\n                                                }\r\n                                                }>Delete profile\r\n                                            </button>\r\n                                        </>\r\n                                        : null\r\n                                }\r\n                            </div>\r\n                    }\r\n                </div>\r\n                {\r\n                    changing\r\n                        ? <ProfileChangeForm\r\n                            profileInformation={profileInformation}\r\n                            setChanging={setChanging}\r\n                            isAdmin={isAdmin}\r\n                            id={id}\r\n                            updateDeveloper={updateDeveloper}\r\n                            setLoading={setLoading}\r\n                            getProfile={getProfile}\r\n                            positionCodes={positionCodes}\r\n                            specialtyCodes={specialtyCodes}\r\n                            onSubmitProfileChange={onSubmitProfileChange}\r\n                        />\r\n                        : <ProfileInfo\r\n                            profileInformation={profileInformation}\r\n                            setChanging={setChanging}\r\n                            deleteDeveloper={() => deleteDeveloper(id)}\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport Profile from './Profile'\r\nimport {developersAPI} from '../../../../api'\r\n\r\nfunction ProfileSide(props) {\r\n\r\n    const {\r\n        profileInformation,\r\n        authId,\r\n        getProfile,\r\n        isAdmin,\r\n        updateDeveloper,\r\n        deleteDeveloper,\r\n        history,\r\n        match,\r\n        changeAvatar,\r\n        positionCodes,\r\n        specialtyCodes,\r\n        logout\r\n    } = props\r\n\r\n    let id = match.params.id ? match.params.id : authId\r\n\r\n    let [changing, setChanging] = useState(false)\r\n    let [loading, setLoading] = useState(false)\r\n\r\n    //Флаг для проверки существования показываемого профиля. Если false =>\r\n    //происходит редирект\r\n    let [existsFlag, setExistsFlag] = useState(true)\r\n\r\n    function changeAvatarAction(event) {\r\n        setLoading(true)\r\n        changeAvatar(id, event.target.files[0])\r\n            .catch(err => {\r\n                console.log(err)\r\n                alert(err.message)\r\n            })\r\n            .finally(() => setLoading(false))\r\n    }\r\n\r\n    function deleteProfile(developerId) {\r\n        // eslint-disable-next-line no-restricted-globals\r\n        const choice = confirm('Are you sure to delete this profile?')\r\n        if(choice) {\r\n            deleteDeveloper(developerId)\r\n                .then(() => history.push('/developers/1'))\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                    alert(err.message)\r\n                })\r\n        }\r\n    }\r\n    function onSubmitProfileChange(values) {\r\n        let choice = true\r\n\r\n        //Защита от случайного изменения прав по схеме\r\n        //администратор -> обычный разработчик\r\n        if((profileInformation.isAdmin !== values.isAdmin) && profileInformation.isAdmin) {\r\n            // eslint-disable-next-line no-restricted-globals\r\n            choice = confirm('Are you sure you want to stop being an administrator? Only another administrator can restore the authority')\r\n        }\r\n        if(choice) {\r\n            setLoading(true)\r\n            developersAPI.checkEmail(values.email, id)\r\n                .then(async (response) => {\r\n                    if(response.passed) {\r\n                        await updateDeveloper(id, values)\r\n                        await getProfile(id)\r\n                        setChanging(false)\r\n                    } else {\r\n                        alert('This mail belongs to another user')\r\n                    }\r\n                    setLoading(false)\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                    alert(err.message)\r\n                    setLoading(false)\r\n                })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        getProfile(id)\r\n            .catch((err) => {\r\n\r\n                //Если пользователь не найден => редирект\r\n                setExistsFlag(false)\r\n                console.log(err)\r\n                alert(err.message)\r\n            })\r\n            .finally(() => setLoading(false))\r\n\r\n        //Установка просмотра профиля при переходе с профиля на профиль\r\n        setChanging(false)\r\n\r\n    }, [id])\r\n\r\n    return <Profile\r\n        existsFlag={existsFlag}\r\n        loading={loading}\r\n        id={id}\r\n        authId={authId}\r\n        isAdmin={isAdmin}\r\n        changeAvatarAction={changeAvatarAction}\r\n        changing={changing}\r\n        setChanging={setChanging}\r\n        deleteProfile={deleteProfile}\r\n        profileInformation={profileInformation}\r\n        updateDeveloper={updateDeveloper}\r\n        setLoading={setLoading}\r\n        deleteDeveloper={deleteDeveloper}\r\n        getProfile={getProfile}\r\n        positionCodes={positionCodes}\r\n        specialtyCodes={specialtyCodes}\r\n        onSubmitProfileChange={onSubmitProfileChange}\r\n        logout={logout}\r\n    />\r\n}\r\n\r\nexport default withRouter(ProfileSide)","import {connect} from 'react-redux'\r\nimport Profile from './ProfileSide'\r\nimport * as selectors from '../../../../redux/selectors'\r\nimport {getProfile, changeAvatar} from '../../../../redux/reducers/profile_reducer'\r\nimport {updateDeveloper, deleteDeveloper} from '../../../../redux/reducers/developers_reducer'\r\nimport {logout} from '../../../../redux/reducers/auth_reducer'\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        profileInformation: selectors.profileInformationSelector(state),\r\n        authId: selectors.authIdSelector(state),\r\n        isAdmin: selectors.isAdminSelector(state),\r\n        positionCodes: selectors.positionCodesSelector(state),\r\n        specialtyCodes: selectors.specialtyCodesSelector(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getProfile,\r\n    updateDeveloper,\r\n    deleteDeveloper,\r\n    changeAvatar,\r\n    logout\r\n})(Profile)","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {dateStringFormat} from '../../../../../utils/formats'\r\nimport * as style from '../all_projects.module.css'\r\n\r\nexport default function SingleProject(props) {\r\n    const {\r\n        id,\r\n        title,\r\n        description,\r\n        deadline,\r\n        projectLead\r\n    } = props\r\n\r\n    return (\r\n        <NavLink to={`/single_project/${id}/project_info`}>\r\n\r\n            {/*  Если дата меньше, чем настоящее время, то проект просрочен */}\r\n            <div className={`${style.project_item} ${Date.parse(deadline) < Date.now() ? style.expired : ''}`}>\r\n                <h2>{title}</h2>\r\n                <p className={style.description}>\r\n                    {\r\n                        description\r\n                            ? description.length > 175 ? description.slice(0, 175) + '...' : description\r\n                            : 'Описание отсутствует'\r\n                    }\r\n                </p>\r\n                <div>\r\n                    {\r\n                        projectLead\r\n                            ?   <>\r\n                                <h3>Project lead: <span className={style.project_lead_name}>{projectLead.developer_name} {projectLead.developer_surname}</span></h3>\r\n                                <p>{projectLead.developer_position} {projectLead.developer_specialty}</p>\r\n                                <p>{projectLead.developer_email}</p>\r\n                            </>\r\n                            : <h3>Project lead: <span className={style.project_lead_name}>Отсутствует</span></h3>\r\n                    }\r\n                </div>\r\n                <p className={style.deadline}><b>Until: </b>{dateStringFormat(deadline)}</p>\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}","import React from 'react'\r\nimport {withRouter, NavLink} from 'react-router-dom'\r\nimport * as style from './pagination.module.css'\r\n\r\nfunction Pagination({totalCount, paginationSize, match, history, rootValue}) {\r\n\r\n    const page = +match.params.page,\r\n        pagesRadiusArray = [],\r\n        countOfPages = Math.ceil(totalCount / paginationSize),\r\n\r\n        /*  Границы для заполнение массива значениями 1...[5, 6, 7, 8]...12 */\r\n        startOfIteration = page <= 4 ? 1 : page - 2,\r\n        endOfIteration = page >= (countOfPages - 3) ? countOfPages : page + 2\r\n\r\n    for(let i = startOfIteration; i <= endOfIteration; i++)\r\n        pagesRadiusArray.push(i)\r\n\r\n    function pageNext() {\r\n        history.push(`${rootValue}${page + 1}`)\r\n    }\r\n    function pagePrev() {\r\n        history.push(`${rootValue}${page - 1}`)\r\n    }\r\n\r\n    return (\r\n        <div className={style.pagination_wrapper}>\r\n            <button className={style.arrow + ' ' + (page <= 1 ? style.disabled : '')} onClick={pagePrev} disabled={page <= 1}>\r\n                <span className={style.pagination_item}><b>{'<'}</b></span>\r\n            </button>\r\n            {\r\n                page > 4\r\n                    ? <>\r\n                        <span className={style.pagination_item}><NavLink to={rootValue + '1'}>1</NavLink></span>\r\n                        <span className={style.pagination_item}>&nbsp;...&nbsp;</span>\r\n                    </>\r\n                    : null\r\n            }\r\n            {\r\n                pagesRadiusArray.map(pageItem =>\r\n                    <span className={style.pagination_item + ' ' + (pageItem === page ? style.active : '')} key={pageItem}>\r\n                        &nbsp;<NavLink to={rootValue + pageItem}>{pageItem}</NavLink>\r\n                    </span>)\r\n            }\r\n            {\r\n                page < countOfPages - 3\r\n                    ?  <>\r\n                        <span className={style.pagination_item}>&nbsp;...&nbsp;</span>\r\n                        <span className={style.pagination_item}><NavLink to={rootValue + countOfPages}>{countOfPages}</NavLink></span>\r\n                    </>\r\n                    : null\r\n            }\r\n            <button\r\n                className={style.arrow + ' ' + (page === countOfPages ? style.disabled : '')}\r\n                onClick={pageNext}\r\n                disabled={page === countOfPages}\r\n            >\r\n                <span className={style.pagination_item}><b>{'>'}</b></span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Pagination)","import React from 'react'\r\nimport {useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nexport default function ProjectsSearchForm({onSubmitSearchProject}) {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: ''\r\n        },\r\n        validationSchema: Yup.object({\r\n            title: Yup.string('Must be string')\r\n        }),\r\n        onSubmit(values) {\r\n            onSubmitSearchProject(values)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} className='search_form'>\r\n            <p className='search_annotation'>Search&nbsp;by </p>\r\n            <input\r\n                type='text'\r\n                placeholder='project title'\r\n                id='title'\r\n                autoComplete='off'\r\n                {...formik.getFieldProps('title')}\r\n            />\r\n            <input type=\"submit\" className='primary-btn' value='Search'/>\r\n        </form>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink, Redirect} from 'react-router-dom'\r\nimport Project from './single_project/SingleProject'\r\nimport Loader from '../../../../utils_components/Loader'\r\nimport Pagination from '../../../../utils_components/pagination/Pagination'\r\nimport ProjectsSearchForm from './ProjectsSearchForm'\r\nimport * as style from './all_projects.module.css'\r\n\r\nexport default function Projects(props) {\r\n\r\n    const {\r\n        projectsList,\r\n        totalCount,\r\n        pagSize,\r\n        isAdmin,\r\n        page,\r\n        totalPagesCount,\r\n        loading,\r\n        onSubmitSearchProject\r\n    } = props\r\n\r\n    //Второе условие для отлова частного случая, при котором мы не найдем ни одного проекта при поиске\r\n    //но при этом редирект не нужен\r\n    if ((page > totalPagesCount || page < 1) && !(totalCount === 0  && page === 1))\r\n        return <Redirect to='/projects/1'/>\r\n\r\n    if(loading)\r\n        return <Loader/>\r\n\r\n    else\r\n        return (\r\n            <>\r\n                <div className={style.projects_actions_wrapper}>\r\n                    <ProjectsSearchForm\r\n                        onSubmitSearchProject={onSubmitSearchProject}\r\n                    />\r\n                    {\r\n                        isAdmin\r\n                            ? <NavLink to='/put-project' className='primary-btn'>Add project</NavLink>\r\n                            : null\r\n                    }\r\n                </div>\r\n                <div className='founded'>\r\n                    Projects found:&nbsp;<span>{totalCount}</span>\r\n                </div>\r\n                <div className={style.all_projects_wrapper}>\r\n                    {\r\n                        projectsList.map(project => <Project\r\n                            id={project.project_id}\r\n                            title={project.project_title}\r\n                            description={project.project_description}\r\n                            deadline={project.project_deadline}\r\n                            projectLead={project.lead}\r\n                            key={project.project_id}\r\n                        />)\r\n                    }\r\n                </div>\r\n                {\r\n                    Math.ceil(totalCount / pagSize) > 1\r\n                        ? <Pagination\r\n                            rootValue='/projects/'\r\n                            paginationSize={pagSize}\r\n                            totalCount={totalCount}\r\n                        />\r\n                        : null\r\n                }\r\n            </>\r\n        )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport AllProjects from './Projects'\r\n\r\nfunction ProjectsSide(props) {\r\n\r\n    const {\r\n        projectsList,\r\n        totalCount,\r\n        pagSize,\r\n        getProjects,\r\n        getProjectsCount,\r\n        isAdmin,\r\n        match,\r\n        history\r\n    } = props\r\n\r\n    let page = match.params.page ? +match.params.page : 1\r\n    const totalPagesCount = Math.ceil(totalCount / pagSize)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [searchTitle, setSearchTitle] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n\r\n        setLoading(true)\r\n        getProjectsCount(searchTitle)\r\n            .catch(err => {\r\n                console.log(err)\r\n                alert(err.message)\r\n            })\r\n            .finally(() => setLoading(false))\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        setLoading(true)\r\n        history.push('/projects/1')\r\n\r\n        getProjects(1, searchTitle)\r\n            .catch((err) => {\r\n                console.log(err)\r\n                alert(err.message)\r\n            })\r\n            .finally(() => setLoading(false))\r\n\r\n    }, [totalCount])\r\n\r\n    useEffect(() => {\r\n\r\n        setLoading(true)\r\n\r\n        //Проверка на валидность страницы. Впоследствие произойдет редирект\r\n        if(page >= 1 && page <= totalPagesCount) {\r\n            getProjects(page, searchTitle)\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                    alert(err.message)\r\n                })\r\n                .finally(() => setLoading(false))\r\n        } else {\r\n            setLoading(false)\r\n        }\r\n\r\n    }, [page])\r\n\r\n    function onSubmitSearchProject(values) {\r\n        setLoading(true)\r\n        setSearchTitle(values.title)\r\n        getProjectsCount(values.title)\r\n            .catch(err => {\r\n                console.log(err)\r\n                alert(err.message)\r\n            })\r\n            .finally(() => setLoading(false))\r\n    }\r\n\r\n    return <AllProjects\r\n        projectsList={projectsList}\r\n        totalCount={totalCount}\r\n        pagSize={pagSize}\r\n        isAdmin={isAdmin}\r\n        page={page}\r\n        totalPagesCount={totalPagesCount}\r\n        loading={loading}\r\n        onSubmitSearchProject={onSubmitSearchProject}\r\n    />\r\n}\r\n\r\nexport default withRouter(ProjectsSide)\r\n\r\n","import {connect} from 'react-redux'\r\nimport React from 'react'\r\nimport Projects from './ProjectsSide'\r\nimport * as selectors from '../../../../../redux/selectors'\r\nimport {\r\n    getProjects,\r\n    getProjectsCount,\r\n    getDevelopersProjects,\r\n    getDevelopersProjectsCount\r\n} from '../../../../../redux/reducers/projects_reducer'\r\n\r\n\r\nfunction ProjectMiddleWare(props) {\r\n\r\n    const getProjects = props.isAdmin\r\n        ? props.getProjects\r\n        : (page, title) => props.getDevelopersProjects(page, title, props.authId)\r\n\r\n    const getProjectsCount = props.isAdmin\r\n        ? props.getProjectsCount\r\n        : (title) => props.getDevelopersProjectsCount(title, props.authId)\r\n\r\n    return <Projects\r\n        projectsList={props.projectsList}\r\n        totalCount={props.totalCount}\r\n        pagSize={props.pagSize}\r\n        actualProject={props.actualProject}\r\n        isAdmin={props.isAdmin}\r\n        getProjects={getProjects}\r\n        getProjectsCount={getProjectsCount}\r\n    />\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        projectsList: selectors.projectsListSelector(state),\r\n        totalCount: selectors.totalProjectsCountSelector(state),\r\n        pagSize: selectors.projectsPaginationSizeSelector(state),\r\n        actualProject: selectors.actualProjectSelector(state),\r\n        isAdmin: selectors.isAdminSelector(state),\r\n        authId: selectors.authIdSelector(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n\r\n    getProjects,\r\n    getProjectsCount,\r\n    getDevelopersProjects,\r\n    getDevelopersProjectsCount\r\n\r\n})(ProjectMiddleWare)","import {useFormik} from 'formik'\r\nimport React from 'react'\r\nimport * as Yup from 'yup'\r\n\r\nexport default function DeveloperSearchForm({onSubmitSearchDevelopers}) {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            surname: ''\r\n        },\r\n        validationSchema: Yup.object({\r\n            email: Yup.string(),\r\n            surname: Yup.string()\r\n        }),\r\n        onSubmit(values) {\r\n            onSubmitSearchDevelopers(values)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} className='search_form'>\r\n            <p className='search_annotation'>Search&nbsp;by </p>\r\n            <input\r\n                type='email'\r\n                placeholder='email'\r\n                id='email'\r\n                autoComplete='off'\r\n                {...formik.getFieldProps('email')}\r\n            />\r\n            <p className='search_annotation'>or</p>\r\n            <input\r\n                type='text'\r\n                placeholder='surname'\r\n                id='surname'\r\n                autoComplete='off'\r\n                {...formik.getFieldProps('surname')}\r\n            />\r\n            <input type=\"submit\" className='primary-btn' value='Search'/>\r\n        </form>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport * as style from '../developers.module.css'\r\n\r\nexport default function SingleDeveloper(props) {\r\n    const {\r\n        id,\r\n        name,\r\n        avatarURL,\r\n        surname,\r\n        email,\r\n        specialty,\r\n        position,\r\n        deleteDeveloperAction\r\n    } = props\r\n\r\n    return (\r\n        <div className={style.developer_wrapper}>\r\n            <NavLink to={`/profile/${id}`}>\r\n                <div className={style.single_developer}>\r\n                    <img src={avatarURL} alt='avatar'/>\r\n                    <div>\r\n                        <p className={style.single_developer_full_name}>{name} {surname}</p>\r\n                        <p className={style.single_developer_email}>{email}</p>\r\n                        <p>{position} {specialty}</p>\r\n                    </div>\r\n                </div>\r\n            </NavLink>\r\n            {\r\n                deleteDeveloperAction\r\n                    ? <button onClick={() => deleteDeveloperAction(id)} className={style.delete_btn}>X</button>\r\n                    : null\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Loader from '../../../utils_components/Loader'\r\nimport DeveloperSearchForm from './DeveloperSearchForm'\r\nimport Pagination from '../../../utils_components/pagination/Pagination'\r\nimport {Redirect} from 'react-router-dom'\r\nimport * as style from './developers.module.css'\r\nimport SingleDeveloper from './developer/Developer'\r\n\r\nexport default function Developers(props) {\r\n\r\n    const {\r\n        page,\r\n        totalPagesCount,\r\n        totalDevelopersCount,\r\n        loading,\r\n        setLoading,\r\n        developersList,\r\n        paginationSize,\r\n        rootPath,\r\n        AddDeveloper,\r\n        onSubmitSearchDevelopers,\r\n        deleteDeveloperAction,\r\n        onSubmitAddDeveloperCreator,\r\n        accessRights\r\n    } = props\r\n\r\n    const onSubmitAddDeveloper = onSubmitAddDeveloperCreator\r\n        ? onSubmitAddDeveloperCreator(setLoading)\r\n        : null\r\n\r\n    //Второе условие для отлова частного случая, при котором мы не найдем ни одного разработчика при поиске\r\n    //но при этом редирект не нужен\r\n    if((page > totalPagesCount || page < 1) && !(totalDevelopersCount === 0  && page === 1))\r\n        return <Redirect to={`${rootPath}1`}/>\r\n\r\n    else\r\n        return (\r\n            <div>\r\n                <div className={style.developers_wrapper_actions}>\r\n                    <DeveloperSearchForm\r\n                        onSubmitSearchDevelopers={onSubmitSearchDevelopers}\r\n                    />\r\n                    {\r\n                        AddDeveloper && accessRights\r\n                            ? <AddDeveloper\r\n                                onSubmitAddDeveloper={onSubmitAddDeveloper}\r\n                            />\r\n                            : null\r\n                    }\r\n\r\n                </div>\r\n                <div className='founded'>\r\n                    Developers found:&nbsp;<span>{totalDevelopersCount}</span>\r\n                </div>\r\n                {\r\n                    loading\r\n                        ? <Loader/>\r\n                        : developersList.map(developer => <SingleDeveloper\r\n                            avatarURL={developer.developer_avatar_url}\r\n                            name={developer.developer_name}\r\n                            surname={developer.developer_surname}\r\n                            email={developer.developer_email}\r\n                            id={developer.developer_id}\r\n                            specialty={developer.developer_specialty}\r\n                            position={developer.developer_position}\r\n                            key={developer.developer_id}\r\n                            deleteDeveloperAction={deleteDeveloperAction}\r\n                        />)\r\n                }\r\n                {\r\n                    totalPagesCount > 1\r\n                        ? <Pagination\r\n                            totalCount={totalDevelopersCount}\r\n                            paginationSize={paginationSize}\r\n                            rootValue={rootPath}\r\n                        />\r\n                        : null\r\n                }\r\n            </div>\r\n        )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport Developers from './Developers'\r\n\r\nfunction DevelopersSide(props) {\r\n\r\n    const {\r\n        totalDevelopersCount,\r\n        paginationSize,\r\n        developersList,\r\n        getDevelopers,\r\n        getTotalCount,\r\n        match,\r\n        history,\r\n        rootPath,\r\n        AddDeveloper,\r\n        deleteDeveloperAction,\r\n        onSubmitAddDeveloperCreator,\r\n        accessRights\r\n    } = props\r\n\r\n    let page = match.params.page ? +match.params.page : 1\r\n    const totalPagesCount = Math.ceil(totalDevelopersCount / paginationSize)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [searchEmail, setSearchEmail] = useState(undefined)\r\n    const [searchSurname, setSearchSurname] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n\r\n        getTotalCount()\r\n            .catch((err) => {\r\n                console.log(err)\r\n                alert(err.message)\r\n            })\r\n            .finally(() => setLoading(false))\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        //При изменении общего числа пользователей переход на первую страницу\r\n        //и получение разрабочиков по данным, полученым из DevelopersSearchForm.\r\n        //Если данных не получено - получение всех пользователей\r\n        history.push(rootPath + '1')\r\n        getDevelopers(1, searchEmail, searchSurname)\r\n            .catch((err) => {\r\n                console.log(err)\r\n                alert(err.message)\r\n            })\r\n            .finally(() => setLoading(false))\r\n\r\n    }, [totalDevelopersCount])\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n\r\n        //Запрос на получение только при валидной странице.\r\n        //Впоследствие произойдет редирект\r\n        if(page >= 1 && page <= totalPagesCount) {\r\n\r\n            //Получение разработчиков при изменении страницы\r\n            getDevelopers(page, searchEmail, searchSurname)\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                    alert(err.message)\r\n                })\r\n                .finally(() => setLoading(false))\r\n        } else {\r\n            setLoading(false)\r\n        }\r\n\r\n    }, [page])\r\n\r\n    function onSubmitSearchDevelopers(values) {\r\n        setLoading(true)\r\n        setSearchEmail(values.email)\r\n        setSearchSurname(values.surname)\r\n\r\n        //При изменении общего числа пользователей\r\n        //в родительской компоненте будут получены пользователи по данным\r\n        //email и surname\r\n        getTotalCount(values.email, values.surname)\r\n            .then(() => setLoading(false))\r\n            .catch((err) => {\r\n                console.log(err)\r\n                alert(err.message)\r\n            })\r\n    }\r\n\r\n    function deleteDeveloper(developerId) {\r\n        // eslint-disable-next-line no-restricted-globals\r\n        if(deleteDeveloperAction && confirm('Are you sure to delete this developer from task?')) {\r\n            setLoading(true)\r\n            deleteDeveloperAction(developerId)\r\n                .then(() => getTotalCount())\r\n                .catch(err => {\r\n                    console.log(err)\r\n                    alert(err.message)\r\n                })\r\n                .finally(() => setLoading(false))\r\n        }\r\n    }\r\n\r\n    return <Developers\r\n        page={page}\r\n        totalPagesCount={totalPagesCount}\r\n        totalDevelopersCount={totalDevelopersCount}\r\n        getDevelopers={getDevelopers}\r\n        setLoading={setLoading}\r\n        getTotalCount={getTotalCount}\r\n        setSearchEmail={setSearchEmail}\r\n        setSearchSurname={setSearchSurname}\r\n        loading={loading}\r\n        developersList={developersList}\r\n        paginationSize={paginationSize}\r\n        AddDeveloper={AddDeveloper}\r\n        rootPath={rootPath}\r\n        onSubmitSearchDevelopers={onSubmitSearchDevelopers}\r\n        deleteDeveloperAction={deleteDeveloperAction ? deleteDeveloper : null}\r\n        onSubmitAddDeveloperCreator={onSubmitAddDeveloperCreator}\r\n        accessRights={accessRights}\r\n    />\r\n}\r\n\r\nexport default withRouter(DevelopersSide)","import {connect} from 'react-redux'\r\nimport Developers from './DevelopersSide'\r\nimport * as selectors from '../../../../redux/selectors/index'\r\nimport {getDevelopers, getTotalCount} from '../../../../redux/reducers/developers_reducer'\r\nimport React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nfunction DevelopersContainer(props) {\r\n    return <Developers\r\n        {...props}\r\n        AddDeveloper={() => <NavLink to='/put-developer' className='primary-btn'>Add&nbsp;new&nbsp;developer</NavLink>}\r\n    />\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        totalDevelopersCount: selectors.totalDevelopersCountSelector(state),\r\n        paginationSize: selectors.paginationSizeDevelopersSelector(state),\r\n        developersList: selectors.developersListSelector(state),\r\n        rootPath: '/developers/',\r\n        accessRights: selectors.isAdminSelector(state)\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n\r\n    getDevelopers,\r\n    getTotalCount\r\n\r\n})(DevelopersContainer)","import {useFormik} from 'formik'\r\nimport {NavLink} from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\nimport React from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport * as style from './put_developer_form.module.css'\r\n\r\nfunction PutDeveloperForm({onSubmitPutDeveloper}) {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            surname: '',\r\n            patronymic: '',\r\n            birth: '',\r\n            email: '',\r\n            position: '0',\r\n            specialty: '0',\r\n            isAdmin: '',\r\n            password: ''\r\n        },\r\n        validationSchema: Yup.object({\r\n            name: Yup.string().required('Fill out the required field'),\r\n            surname: Yup.string().required('Fill out the required field'),\r\n            birth: Yup.date('Invalid date').max(new Date(), 'Invalid birth date').required('Fill out the required field'),\r\n            email: Yup.string().email('Invalid email').required('Fill out the required field'),\r\n            password: Yup.string().required('Fill out the required field')\r\n        }),\r\n        onSubmit(values) {\r\n            onSubmitPutDeveloper(values)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} className={style.developer_put_form}>\r\n            <div className={style.developer_put_form_data}>\r\n                <input\r\n                    type='text'\r\n                    id='name'\r\n                    autoComplete='off'\r\n                    {...formik.getFieldProps('name')}\r\n                    placeholder='*name'\r\n                />\r\n                {\r\n                    formik.errors.name && formik.touched.name\r\n                        ? <div className='validation_error'>{formik.errors.name}</div>\r\n                        : null\r\n                }\r\n                <input\r\n                    type='text'\r\n                    id='surname'\r\n                    autoComplete='off'\r\n                    {...formik.getFieldProps('surname')}\r\n                    placeholder='*surname'\r\n                />\r\n                {\r\n                    formik.errors.surname && formik.touched.surname\r\n                        ? <div className='validation_error'>{formik.errors.surname}</div>\r\n                        : null\r\n                }\r\n                <input\r\n                    type='text'\r\n                    id='patronymic'\r\n                    autoComplete='off'\r\n                    {...formik.getFieldProps('patronymic')}\r\n                    placeholder='patronymic'\r\n                />\r\n                {\r\n                    formik.errors.patronymic && formik.touched.patronymic\r\n                        ? <div className='validation_error'>{formik.errors.patronymic}</div>\r\n                        : null\r\n                }\r\n                <input\r\n                    type='date'\r\n                    id='birth'\r\n                    autoComplete='off'\r\n                    {...formik.getFieldProps('birth')}\r\n                    placeholder='*birth'\r\n                />\r\n                {\r\n                    formik.errors.birth && formik.touched.birth\r\n                        ? <div className='validation_error'>{formik.errors.birth}</div>\r\n                        : null\r\n                }\r\n                <input\r\n                    type='email'\r\n                    id='email'\r\n                    autoComplete='off'\r\n                    {...formik.getFieldProps('email')}\r\n                    placeholder='*email'\r\n                />\r\n                {\r\n                    formik.errors.email && formik.touched.email\r\n                        ? <div className='validation_error'>{formik.errors.email}</div>\r\n                        : null\r\n                }\r\n                <select\r\n                    name=\"position\"\r\n                    value={formik.values.position}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    style={{ display: 'block' }}\r\n                >\r\n                    <option value='0' label='Developer'/>\r\n                    <option value='1' label='QA Developer'/>\r\n                    <option value='2' label='Frontend Developer'/>\r\n                    <option value='3' label='Backend Developer'/>\r\n                    <option value='4' label='Fullstack Developer'/>\r\n                    <option value='5' label='Data scientist'/>\r\n                    <option value='6' label='iOS developer'/>\r\n                    <option value='7' label='Android developer'/>\r\n                    <option value='8' label='System administrator'/>\r\n                </select>\r\n\r\n                <select\r\n                    name=\"specialty\"\r\n                    value={formik.values.specialty}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    style={{ display: 'block' }}\r\n                >\r\n                    <option value='0' label='Trainee'/>\r\n                    <option value='1' label='Junior'/>\r\n                    <option value='2' label='Middle'/>\r\n                    <option value='3' label='Senior'/>\r\n                    <option value='4' label='Technical Director'/>\r\n                </select>\r\n\r\n                <div>\r\n                    <span>Is admin: </span>\r\n                    <input\r\n                        type='checkbox'\r\n                        id='IsAdmin'\r\n                        {...formik.getFieldProps('isAdmin')}\r\n                        checked={formik.getFieldProps('isAdmin').value}\r\n                    />\r\n                </div>\r\n                {\r\n                    formik.errors.avatarURL && formik.touched.avatarURL\r\n                        ? <div className='validation_error'>{formik.errors.avatarURL}</div>\r\n                        : null\r\n                }\r\n                <input type=\"password\"\r\n                       id='password'\r\n                       autoComplete='off'\r\n                       {...formik.getFieldProps('password')}\r\n                       placeholder='password'\r\n                />\r\n                {\r\n                    formik.errors.password && formik.touched.password\r\n                        ? <div className='validation_error'>{formik.errors.password}</div>\r\n                        : null\r\n                }\r\n                <div className={style.developer_put_form_actions}>\r\n                    <button type='submit' className='primary-btn'>Save</button>\r\n                    <NavLink to='/developers/1' className='back_action'>Back</NavLink>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default withRouter(PutDeveloperForm)","import React, {useState} from 'react'\r\nimport {useFormik} from 'formik'\r\nimport {NavLink} from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\nimport Loader from '../../../utils_components/Loader'\r\nimport * as style from './work_with_project_form.module.css'\r\n\r\nexport default function WorkWithProjectForm(props) {\r\n    const {\r\n        initialValues,\r\n        onSubmit,\r\n        actualProject,\r\n        action,\r\n        location,\r\n        projectId\r\n    } = props\r\n\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const formik = useFormik({\r\n        initialValues: initialValues(actualProject),\r\n        validationSchema: Yup.object({\r\n            title: Yup.string().required('Fill out the required field'),\r\n            description: Yup.string().max(2000, 'Description max length is 2000'),\r\n            deadline: Yup.date().min(new Date(), 'Invalid deadline date').required('Fill out the required field'),\r\n            projectLeadEmail: Yup.string().email('Invalid email')\r\n        }),\r\n        onSubmit(values) {\r\n            onSubmit(values, setLoading)\r\n        }\r\n    })\r\n\r\n    if (loading)\r\n        return <Loader/>\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} className={style.work_with_project_form}>\r\n            <input\r\n                type='text'\r\n                placeholder='Title'\r\n                id='text'\r\n                autoComplete='off'\r\n                {...formik.getFieldProps('title')}\r\n            />\r\n            {\r\n                formik.errors.title && formik.touched.title\r\n                    ? <p className='validation_error'>{formik.errors.title}</p>\r\n                    : null\r\n            }\r\n            <textarea\r\n                name='description'\r\n                id='description'\r\n                autoComplete='off'\r\n                {...formik.getFieldProps('description')}\r\n                placeholder='Description of project'\r\n            />\r\n            {\r\n                formik.errors.description && formik.touched.description\r\n                    ? <p className='validation_error'>{formik.errors.description}</p>\r\n                    : null\r\n            }\r\n            <input\r\n                type='date'\r\n                id='deadline'\r\n                autoComplete='off'\r\n                {...formik.getFieldProps('deadline')}\r\n            />\r\n            {\r\n                formik.errors.deadline && formik.touched.deadline\r\n                    ? <p className='validation_error'>{formik.errors.deadline}</p>\r\n                    : null\r\n            }\r\n            <input\r\n                type='email'\r\n                id='projectLeadEmail'\r\n                autoComplete='off'\r\n                {...formik.getFieldProps('projectLeadEmail')}\r\n                placeholder='Project lead`s email'\r\n            />\r\n            {\r\n                formik.errors.projectLeadEmail && formik.touched.projectLeadEmail\r\n                    ? <p className='validation_error'>{formik.errors.projectLeadEmail}</p>\r\n                    : null\r\n            }\r\n            <div>\r\n                <button\r\n                    className='primary-btn'\r\n                    type='submit'\r\n                >{action} project\r\n                </button>\r\n                <NavLink\r\n                    className='back_action'\r\n                    to={location.pathname.includes('put-project')\r\n                        ? '/projects/1'\r\n                        : `/single_project/${projectId}/project_info`\r\n                    }\r\n                >Back</NavLink>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport * as style from '../notifications.module.css'\r\nimport {dateTimeStringFormat} from '../../../../utils/formats'\r\n\r\nexport default function SingleNotification(props) {\r\n    const {\r\n        sender,\r\n        content,\r\n        date,\r\n        deleteNotificationAction,\r\n        updateNotification,\r\n        accessRights\r\n    } = props\r\n\r\n    const [isChanging, setIsChanging] = useState(false)\r\n    const [contentValue, setContentValue] = useState(content)\r\n    const [areaError, setAreaError] = useState(null)\r\n\r\n    function onDeleteAction() {\r\n\r\n        // eslint-disable-next-line no-restricted-globals\r\n        if(confirm('Are you sure to delete this notification?')) {\r\n            deleteNotificationAction()\r\n                .then(() => setIsChanging(false))\r\n        }\r\n    }\r\n\r\n    function updateAction() {\r\n        if(contentValue !== content) {\r\n            updateNotification(contentValue)\r\n                .then(() => setIsChanging(false))\r\n        } else\r\n            setIsChanging(false)\r\n    }\r\n\r\n    return <div className={style.notification_wrapper}>\r\n        <div className={style.notification_header}>\r\n            <p className={style.notification_sender}>\r\n                From: <span>{sender}</span>\r\n            </p>\r\n            {\r\n                accessRights\r\n                    ? <button onClick={onDeleteAction}>X</button>\r\n                    : null\r\n            }\r\n        </div>\r\n        {\r\n            isChanging\r\n                ? <>\r\n                    <textarea\r\n                        autoFocus={true}\r\n                        onBlur={() => areaError ? null : updateAction()}\r\n                        value={contentValue}\r\n                        onChange={(event) => {\r\n                            if(event.target.value.length > 3100)\r\n                                setAreaError('Content length is max 3100 symbols')\r\n                            else if(event.target.value.length === 0)\r\n                                setAreaError('Cause is required')\r\n                            else\r\n                                setAreaError(null)\r\n                            setContentValue(event.target.value)\r\n                        }\r\n                        }\r\n                    />\r\n                    {\r\n                        areaError\r\n                            ? <div className={`validation_error ${style.error}`}>{areaError}</div>\r\n                            : null\r\n                    }\r\n                </>\r\n                : <p\r\n                    className={style.notification_content}\r\n                    onDoubleClick={accessRights ? () => setIsChanging(true) : null}>\r\n                    {content}\r\n                </p>\r\n        }\r\n        <p className={style.notification_date}>\r\n            {dateTimeStringFormat(date)}\r\n        </p>\r\n    </div>\r\n}","import React from 'react'\r\nimport {useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport * as style from '../notifications.module.css'\r\n\r\n\r\nexport default function AddNotificationForm({onSubmitPutNotification}) {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            content: ''\r\n        },\r\n        validationSchema: Yup.object({\r\n            content: Yup.string().max(3100, 'Content must be max 3100 symbols length').required('Fill out the required field')\r\n        }),\r\n        onSubmit(values) {\r\n            onSubmitPutNotification(values)\r\n        }\r\n    })\r\n\r\n    return <form onSubmit={formik.handleSubmit} className={style.add_form}>\r\n        <textarea\r\n            id='content'\r\n            placeholder='Write text of notification'\r\n            autoComplete='off'\r\n            {...formik.getFieldProps('content')}\r\n        />\r\n        {\r\n            formik.errors.content && formik.touched.content\r\n                ? <p className='validation_error'>{formik.errors.content}</p>\r\n                : null\r\n        }\r\n        <button className='primary-btn'>\r\n            Add notification\r\n        </button>\r\n    </form>\r\n}","import React from 'react'\r\nimport Pagination from '../../../utils_components/pagination/Pagination'\r\nimport Loader from '../../../utils_components/Loader'\r\nimport SingleNotification from './single_notification/SingleNotification'\r\nimport AddNotificationForm from './add_notification_form/AddNotificationForm'\r\nimport * as style from './notifications.module.css'\r\n\r\nexport default function Notification(props) {\r\n    const {\r\n        totalPagesCount,\r\n        notificationsList,\r\n        paginationSize,\r\n        totalNotificationsCount,\r\n        rootPath,\r\n        loading,\r\n        isAdding,\r\n        setIsAdding,\r\n        onSubmitPutNotification,\r\n        deleteNotificationAction,\r\n        updateNotificationActionCreator,\r\n        accessRights\r\n    } = props\r\n\r\n    if(loading)\r\n        return <Loader/>\r\n\r\n    return (\r\n        <div className={style.all_notifications_wrapper}>\r\n            {\r\n                //Если не приходит функция submit => невозможно работать с формой\r\n                //В случае, если идет работа без задач (вывести все уведомления) будет невозможно добавить уведомление\r\n                onSubmitPutNotification && accessRights\r\n                    ? <>\r\n                        <button\r\n                            className='primary-btn'\r\n                            onClick={() => setIsAdding(!isAdding)}> {isAdding ? 'Back' : 'Add notification'}\r\n                        </button>\r\n                        {\r\n                            isAdding\r\n                                ? <AddNotificationForm\r\n                                    onSubmitPutNotification={onSubmitPutNotification}\r\n                                />\r\n                                : null\r\n                        }\r\n                    </>\r\n                    : null\r\n            }\r\n\r\n            {\r\n                notificationsList.map(notif => <SingleNotification\r\n                    accessRights={accessRights}\r\n                    sender={notif.notif_sender}\r\n                    content={notif.notif_content}\r\n                    date={notif.notif_date}\r\n                    deleteNotificationAction={() => deleteNotificationAction(notif.notif_id)}\r\n                    updateNotification={updateNotificationActionCreator(notif.notif_id)}\r\n                />)\r\n            }\r\n            {\r\n                totalPagesCount > 1\r\n                    ? <Pagination\r\n                        paginationSize={paginationSize}\r\n                        totalCount={totalNotificationsCount}\r\n                        rootValue={rootPath}\r\n                    />\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react'\r\nimport Notifications from './Notifications'\r\n\r\nexport default function NotificationsSide(props) {\r\n    const {\r\n        accessRights,\r\n        notificationsList,\r\n        totalNotificationsCount,\r\n        paginationSize,\r\n        deleteNotification,\r\n        getNotifications,\r\n        getNotificationsCount,\r\n        updateNotification,\r\n        history,\r\n        rootPath,\r\n        page,\r\n        loading,\r\n        setLoading,\r\n        isAdding,\r\n        onSubmitPutNotification,\r\n        setIsAdding\r\n    } = props\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n\r\n        getNotificationsCount()\r\n            .catch((err) => {\r\n                console.log(err)\r\n                alert(err.message)\r\n            })\r\n            .finally(() => setLoading(false))\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        history.push(rootPath + '1')\r\n        getNotifications()\r\n            .catch((err) => {\r\n                console.log(err)\r\n                alert(err.message)\r\n            })\r\n            .finally(() => setLoading(false))\r\n\r\n    }, [totalNotificationsCount])\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n\r\n        //Запрос на получение только при валидной странице.\r\n        //Впоследствие произойдет редирект\r\n        if(page >= 1 && page <= totalPagesCount) {\r\n\r\n            //Получение уведомлений при изменении страницы\r\n            getNotifications()\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                    alert(err.message)\r\n                })\r\n                .finally(() => setLoading(false))\r\n        } else {\r\n            setLoading(false)\r\n        }\r\n\r\n    }, [page])\r\n\r\n    function deleteNotificationAction(notificationId) {\r\n        setLoading(true)\r\n        return deleteNotification(notificationId)\r\n            .then(() => getNotificationsCount())\r\n            .then(() => getNotifications())\r\n            .catch(err => {\r\n                console.log(err)\r\n                alert(err.message)\r\n            })\r\n            .finally(() => setLoading(false))\r\n    }\r\n\r\n    function updateNotificationActionCreator(notificationId) {\r\n        return content => {\r\n            setLoading(true)\r\n            return updateNotification(notificationId, content)\r\n                .then(() => getNotificationsCount())\r\n                .then(() => getNotifications())\r\n                .catch(err => {\r\n                    console.log(err)\r\n                    alert(err.message)\r\n                })\r\n                .finally(() => setLoading(false))\r\n        }\r\n    }\r\n\r\n    const totalPagesCount = Math.ceil(totalNotificationsCount / paginationSize)\r\n\r\n    return <Notifications\r\n        notificationsList={notificationsList}\r\n        totalPagesCount={totalPagesCount}\r\n        loading={loading}\r\n        setLoading={setLoading}\r\n        paginationSize={paginationSize}\r\n        totalNotificationsCount={totalNotificationsCount}\r\n        rootPath={rootPath}\r\n        isAdding={isAdding}\r\n        setIsAdding={setIsAdding}\r\n        onSubmitPutNotification={onSubmitPutNotification}\r\n        deleteNotificationAction={deleteNotificationAction}\r\n        updateNotificationActionCreator={updateNotificationActionCreator}\r\n        accessRights={accessRights}\r\n    />\r\n}","import React, {useState} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport NotificationsSide from \"./NotificationsSide\";\r\n\r\nfunction AllNotificationsSide(props) {\r\n    const {\r\n        accessRights,\r\n        notificationsList,\r\n        totalNotificationsCount,\r\n        paginationSize,\r\n        deleteNotification,\r\n        getAllNotifications,\r\n        getAllNotificationsCount,\r\n        putNotification,\r\n        updateNotification,\r\n        match,\r\n        location,\r\n        history,\r\n        getNotificationsCountByDeveloperId,\r\n        getNotificationsByDeveloperId,\r\n        authId\r\n    } = props\r\n\r\n    let page = match.params.page ? +match.params.page : 1\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    return <NotificationsSide\r\n        accessRights={accessRights}\r\n        notificationsList={notificationsList}\r\n        totalNotificationsCount={totalNotificationsCount}\r\n        paginationSize={paginationSize}\r\n        deleteNotification={deleteNotification}\r\n        getNotifications={\r\n            accessRights\r\n                ? () => getAllNotifications(page)\r\n                : () => getNotificationsByDeveloperId(authId, page)\r\n        }\r\n        getNotificationsCount={\r\n            accessRights\r\n                ? () => getAllNotificationsCount(page)\r\n                : () => getNotificationsCountByDeveloperId(authId, page)\r\n        }\r\n        putNotification={putNotification}\r\n        updateNotification={updateNotification}\r\n        match={match}\r\n        location={location}\r\n        history={history}\r\n        rootPath={`/notifications/`}\r\n        page={page}\r\n        loading={loading}\r\n        setLoading={setLoading}\r\n    />\r\n}\r\n\r\nexport default withRouter(AllNotificationsSide)","import {connect} from 'react-redux'\r\nimport * as selectors from '../../../../redux/selectors'\r\nimport AllNotificationsSide from './AllNotificationsSide'\r\nimport {\r\n    deleteNotification,\r\n    getAllNotifications,\r\n    getAllNotificationsCount,\r\n    putNotification,\r\n    updateNotification,\r\n    getNotificationsCountByDeveloperId,\r\n    getNotificationsByDeveloperId\r\n} from '../../../../redux/reducers/notification_reducer'\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        accessRights: selectors.isAdminSelector(state),\r\n        notificationsList: selectors.notificationsListSelector(state),\r\n        totalNotificationsCount: selectors.totalNotificationsCountSelector(state),\r\n        paginationSize: selectors.notificationsPaginationSize(state),\r\n        authId: selectors.authIdSelector(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n\r\n    deleteNotification,\r\n    getAllNotifications,\r\n    getAllNotificationsCount,\r\n    putNotification,\r\n    updateNotification,\r\n    getNotificationsCountByDeveloperId,\r\n    getNotificationsByDeveloperId\r\n\r\n})(AllNotificationsSide)","import React from 'react'\r\nimport SingleDeveloper from '../../../developers/developer/Developer'\r\nimport {dateStringFormat} from '../../../../../utils/formats'\r\nimport {NavLink} from 'react-router-dom'\r\nimport * as style from './project_info.module.css'\r\n\r\nexport default function ProjectInfo(props) {\r\n\r\n    const {\r\n        actualProject,\r\n        deleteAction,\r\n        accessRights\r\n    } = props\r\n\r\n    return (\r\n        <div className={style.project_info}>\r\n            <h1 className={style.project_title}>{actualProject.project_title}</h1>\r\n            <div className={style.project_info_content}>\r\n                <p className={style.project_description}>\r\n                    {actualProject.project_description || 'No project description'}\r\n                </p>\r\n                <div className={style.project_lead}>\r\n                    <h2>Leader</h2>\r\n                    {\r\n                        actualProject.lead\r\n                            ? <SingleDeveloper\r\n                                id={actualProject.lead.developer_id}\r\n                                surname={actualProject.lead.developer_surname}\r\n                                name={actualProject.lead.developer_name}\r\n                                specialty={actualProject.lead.developer_specialty}\r\n                                position={actualProject.lead.developer_position}\r\n                                avatarURL={actualProject.lead.developer_avatar_url}\r\n                                email={actualProject.lead.developer_email}\r\n                            />\r\n                            : <p>This project does not have a manager yet</p>\r\n                    }\r\n                    {\r\n                        //Действия с проектом могут совершать только лидер и администратор\r\n                        accessRights\r\n                            ? <div className={style.project_actions}>\r\n                                <NavLink\r\n                                    to={`/single_project/${actualProject.project_id}/change_project`}\r\n                                    className='primary-btn'\r\n                                >Change project</NavLink>\r\n                                <button\r\n                                    className='primary-btn'\r\n                                    onClick={deleteAction}\r\n                                >Delete project</button>\r\n                            </div>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </div>\r\n            <p className={style.project_deadline}>Until {dateStringFormat(actualProject.project_deadline)}</p>\r\n        </div>\r\n    )\r\n}","import {connect} from 'react-redux'\r\nimport DevelopersSide from '../../../developers/DevelopersSide'\r\nimport * as selectors from '../../../../../../redux/selectors'\r\nimport {getDevelopersByProject, getCountByProject} from '../../../../../../redux/reducers/developers_reducer'\r\nimport React from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n\r\nfunction ProjectParticipantsContainer(props) {\r\n\r\n    const actualProjectId = props.match.params.id\r\n    const {\r\n        totalDevelopersCount,\r\n        paginationSize,\r\n        developersList,\r\n        getDevelopersByProject,\r\n        getCountByProject\r\n    } = props\r\n\r\n    return <DevelopersSide\r\n        totalDevelopersCount={totalDevelopersCount}\r\n        paginationSize={paginationSize}\r\n        developersList={developersList}\r\n        getDevelopers={(page, email, surname) => getDevelopersByProject(actualProjectId, page, email, surname)}\r\n        getTotalCount={(email, surname) => getCountByProject(actualProjectId, email, surname)}\r\n        AddDeveloper={() => null}\r\n        rootPath={`/single_project/${actualProjectId}/project_participants/`}\r\n    />\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        totalDevelopersCount: selectors.totalDevelopersCountSelector(state),\r\n        paginationSize: selectors.paginationSizeDevelopersSelector(state),\r\n        developersList: selectors.developersListSelector(state)\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n\r\n    getDevelopersByProject,\r\n    getCountByProject\r\n\r\n})(withRouter(ProjectParticipantsContainer))","import React, {useState} from 'react'\r\nimport {useFormik} from 'formik'\r\nimport {NavLink} from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\nimport Loader from '../../../../../utils_components/Loader'\r\nimport * as style from './work_with_task_form.module.css'\r\n\r\nexport default function WorkWithTaskForm(props) {\r\n    const {\r\n        initialValues,\r\n        onSubmit,\r\n        actualTask,\r\n        action,\r\n        location,\r\n        projectId\r\n    } = props\r\n\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        validationSchema: Yup.object({\r\n            title: Yup.string().required('Fill out the required field'),\r\n            description: Yup.string().max(2000, 'Description max length is 2000'),\r\n            results: Yup.string().max(3000, 'Results max length is 3000'),\r\n            planned_deadline_date: location.pathname.includes('change_task') ? null : Yup.date().min(new Date(), 'Invalid deadline date').required('Fill out the required field'),\r\n            planned_deadline_time: location.pathname.includes('change_task') ? null : Yup.string().required('Fill out the required field'),\r\n            taskLeadEmail: Yup.string().email('Invalid email')\r\n        }),\r\n        onSubmit(values) {\r\n            onSubmit(values, setLoading)\r\n        }\r\n    })\r\n\r\n    if(loading)\r\n        return <Loader/>\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} className={style.work_with_tasks_form}>\r\n            <input\r\n                type='text'\r\n                placeholder='Title'\r\n                id='text'\r\n                autoComplete='off'\r\n                {...formik.getFieldProps('title')}\r\n            />\r\n            {\r\n                formik.errors.title && formik.touched.title\r\n                    ? <p className='validation_error'>{formik.errors.title}</p>\r\n                    : null\r\n            }\r\n\r\n            <textarea\r\n                name='description'\r\n                id='description'\r\n                autoComplete='off'\r\n                {...formik.getFieldProps('description')}\r\n                placeholder='Description of task'\r\n            />\r\n            {\r\n                formik.errors.description && formik.touched.description\r\n                    ? <p className='validation_error'>{formik.errors.description}</p>\r\n                    : null\r\n            }\r\n\r\n            <textarea\r\n                name='results'\r\n                id='results'\r\n                autoComplete='off'\r\n                {...formik.getFieldProps('results')}\r\n                placeholder='Results of task'\r\n            />\r\n            {\r\n                formik.errors.results && formik.touched.results\r\n                    ? <p className='validation_error'>{formik.errors.results}</p>\r\n                    : null\r\n            }\r\n\r\n            {\r\n                location.pathname.includes('change_task')\r\n                    ? null\r\n                    : <>\r\n                        <input\r\n                            type='date'\r\n                            id='planned_deadline_date'\r\n                            autoComplete='off'\r\n                            {...formik.getFieldProps('planned_deadline_date')}\r\n                        />\r\n                        {\r\n                            formik.errors.planned_deadline_date && formik.touched.planned_deadline_date\r\n                                ? <p className='validation_error'>{formik.errors.planned_deadline_date}</p>\r\n                                : null\r\n                        }\r\n                        <input\r\n                            type='time'\r\n                            id='planned_deadline_time'\r\n                            autoComplete='off'\r\n                            {...formik.getFieldProps('planned_deadline_time')}\r\n                        />\r\n                        {\r\n                            formik.errors.planned_deadline_time && formik.touched.planned_deadline_time\r\n                                ? <p className='validation_error'>{formik.errors.planned_deadline_time}</p>\r\n                                : null\r\n                        }\r\n                    </>\r\n            }\r\n\r\n            <input\r\n                type='email'\r\n                id='taskLeadEmail'\r\n                autoComplete='off'\r\n                {...formik.getFieldProps('taskLeadEmail')}\r\n                placeholder='Task lead`s email'\r\n            />\r\n            {\r\n                formik.errors.taskLeadEmail && formik.touched.taskLeadEmail\r\n                    ? <p className='validation_error'>{formik.errors.taskLeadEmail}</p>\r\n                    : null\r\n            }\r\n            <div>\r\n                <button\r\n                    className='primary-btn'\r\n                    type='submit'\r\n                >{action} task</button>\r\n                <NavLink\r\n                    className='back_action'\r\n                    to={location.pathname.includes('put_task')\r\n                        ? `/single_project/${projectId}/tasks/all_tasks/`\r\n                        : `/single_project/${projectId}/tasks/single_task/${actualTask.task_id}/task_info`\r\n                    }\r\n                >Back</NavLink>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React from 'react'\r\nimport {useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nexport default function TasksSearchForm({onSubmitSearchTasks}) {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: ''\r\n        },\r\n        validationSchema: Yup.object({\r\n            title: Yup.string('Must be string')\r\n        }),\r\n        onSubmit(values) {\r\n            onSubmitSearchTasks(values)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} className='search_form'>\r\n            <p className='search_annotation'>Search&nbsp;by </p>\r\n            <input\r\n                type='text'\r\n                placeholder='task title'\r\n                id='title'\r\n                autoComplete='off'\r\n                {...formik.getFieldProps('title')}\r\n            />\r\n            <input type=\"submit\" className='primary-btn' value='Search'/>\r\n        </form>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {dateTimeStringFormat} from '../../../../../../../utils/formats'\r\nimport * as style from '../all_tasks.module.css'\r\n\r\nexport default function SingleTask(props) {\r\n\r\n    const {\r\n        id,\r\n        title,\r\n        description,\r\n        actualDeadline,\r\n        lead,\r\n        plannedDeadline,\r\n        projectId\r\n    } = props\r\n\r\n    return (\r\n        <NavLink to={`/single_project/${projectId}/tasks/single_task/${id}/task_info`}>\r\n            <div className={style.task_item}>\r\n                <h2>{\r\n                    title.length > 15\r\n                        ? title.slice(0, 15) + '...'\r\n                        : title\r\n                }</h2>\r\n                <p className={style.task_item_description}>{\r\n                    description\r\n                        ? description.length > 150\r\n                        ? description.slice(0, 150) + '...'\r\n                        : description\r\n                        : 'No description yet'\r\n                }</p>\r\n                <h3>\r\n                    {\r\n                        lead\r\n                            ? <>Project lead: <span>{lead.developer_name} {lead.developer_surname}</span>\r\n                            </>\r\n                            : <>Project lead: <span>Отсутствует</span></>\r\n                    }\r\n                </h3>\r\n                <p className={style.task_item_planned}>Planned until: <span>{dateTimeStringFormat(plannedDeadline)}</span></p>\r\n                <p className={style.task_item_actual}>Actual until: <span>{dateTimeStringFormat(actualDeadline)}</span></p>\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}","import {NavLink, Redirect} from 'react-router-dom'\r\nimport Loader from '../../../../../../utils_components/Loader'\r\nimport TasksSearchForm from './TasksSearchForm'\r\nimport Task from './single_task/SingleTask'\r\nimport Pagination from '../../../../../../utils_components/pagination/Pagination'\r\nimport React from 'react'\r\nimport * as style from './all_tasks.module.css'\r\n\r\n\r\nexport default function AllTasks(props) {\r\n    const {\r\n        page,\r\n        totalPagesCount,\r\n        totalTasksCount,\r\n        projectId,\r\n        loading,\r\n        accessRights,\r\n        tasksList,\r\n        pagSize,\r\n        onSubmitSearchTasks,\r\n    } = props\r\n\r\n    //Второе условие для отлова частного случая, при котором мы не найдем ни одного проекта при поиске\r\n    //но при этом редирект не нужен\r\n    if ((page > totalPagesCount || page < 1) && !(totalTasksCount === 0  && page === 1))\r\n        return <Redirect to={`/single_project/${projectId}/tasks/all_tasks/1`}/>\r\n\r\n    if(loading)\r\n        return <Loader/>\r\n\r\n    else\r\n        return (\r\n            <>\r\n                <div className={style.tasks_actions_wrapper}>\r\n                    <TasksSearchForm\r\n                        onSubmitSearchTasks={onSubmitSearchTasks}\r\n                    />\r\n                    {\r\n                        accessRights\r\n                            ? <NavLink to={`/single_project/${projectId}/tasks/put_task`} className='primary-btn'>Add task</NavLink>\r\n                            : null\r\n                    }\r\n\r\n                </div>\r\n                <div className='founded'>\r\n                    Tasks found:&nbsp;<span>{totalTasksCount}</span>\r\n                </div>\r\n                <div className={style.all_tasks_wrapper}>\r\n                    {\r\n                        tasksList.map(task => <Task\r\n                            id={task.task_id}\r\n                            title={task.task_title}\r\n                            lead={task.lead}\r\n                            description={task.task_description}\r\n                            actualDeadline={task.task_actual_deadline}\r\n                            plannedDeadline={task.task_planned_deadline}\r\n                            projectId={projectId}\r\n                        />)\r\n                    }\r\n                </div>\r\n                {\r\n                    totalPagesCount > 1\r\n                        ? <Pagination\r\n                            rootValue={`/single_project/${projectId}/tasks/all_tasks/`}\r\n                            paginationSize={pagSize}\r\n                            totalCount={totalTasksCount}\r\n                        />\r\n                        : null\r\n                }\r\n            </>\r\n        )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport AllTasks from './AllTasks'\r\n\r\nfunction AllTasksSide(props) {\r\n\r\n    const {\r\n        tasksList,\r\n        match,\r\n        getTasks,\r\n        getTotalTasksCount,\r\n        totalTasksCount,\r\n        pagSize,\r\n        history,\r\n        accessRights\r\n    } = props\r\n\r\n    let page = match.params.page ? +match.params.page : 1\r\n    const projectId = match.params.id\r\n    const totalPagesCount = Math.ceil(totalTasksCount / pagSize)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [searchTitle, setSearchTitle] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n\r\n        setLoading(true)\r\n        getTotalTasksCount(projectId, searchTitle)\r\n            .catch(err => {\r\n                console.log(err)\r\n                alert(err.message)\r\n            })\r\n            .finally(() => setLoading(false))\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        setLoading(true)\r\n        history.push(`/single_project/${projectId}/tasks/all_tasks/1`)\r\n\r\n        getTasks(projectId, 1, searchTitle)\r\n            .catch((err) => {\r\n                console.log(err)\r\n                alert(err.message)\r\n            })\r\n            .finally(() => setLoading(false))\r\n\r\n    }, [totalTasksCount])\r\n\r\n    useEffect(() => {\r\n\r\n        setLoading(true)\r\n\r\n        //Проверка на валидность страницы. Впоследствие произойдет редирект\r\n        if(page >= 1 && page <= totalPagesCount) {\r\n            getTasks(projectId, page, searchTitle)\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                    alert(err.message)\r\n                })\r\n                .finally(() => setLoading(false))\r\n        } else {\r\n            setLoading(false)\r\n        }\r\n\r\n    }, [page])\r\n\r\n    function onSubmitSearchTasks(values) {\r\n        setLoading(true)\r\n        setSearchTitle(values.title)\r\n        getTotalTasksCount(projectId, values.title)\r\n            .catch(err => {\r\n                console.log(err)\r\n                alert(err.message)\r\n            })\r\n            .finally(() => setLoading(false))\r\n    }\r\n\r\n    return <AllTasks\r\n        page={page}\r\n        totalPagesCount={totalPagesCount}\r\n        totalTasksCount={totalTasksCount}\r\n        projectId={projectId}\r\n        loading={loading}\r\n        getTotalTasksCount={getTotalTasksCount}\r\n        accessRights={accessRights}\r\n        tasksList={tasksList}\r\n        pagSize={pagSize}\r\n        onSubmitSearchTasks={onSubmitSearchTasks}\r\n    />\r\n}\r\n\r\nexport default withRouter(AllTasksSide)","import {tasksAPI, changingDatesAPI} from '../../api/index'\r\nimport {successResponseCondition} from '../utils/index'\r\n\r\nconst SET_TASKS_LIST = 'SET_TASKS_LIST'\r\nconst SET_ACTUAL_TASK = 'SET_ACTUAL_TASK'\r\nconst SET_TOTAL_TASKS_COUNT = 'SET_TOTAL_TASKS_COUNT'\r\nconst SET_CHANGING_DATES_LIST = 'SET_CHANGING_DATES_LIST'\r\n\r\nconst defaultState = {\r\n    tasksList: [],\r\n    actualTask: null,\r\n    paginationSize: 6,\r\n    totalTasksCount: null,\r\n    changingDatesList: []\r\n}\r\n\r\nexport default function tasksReducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case(SET_TOTAL_TASKS_COUNT): {\r\n            return {\r\n                ...state,\r\n                totalTasksCount: action.newTotalCount\r\n            }\r\n        }\r\n        case(SET_TASKS_LIST): {\r\n            return {\r\n                ...state,\r\n                tasksList: action.newTasksList\r\n            }\r\n        }\r\n        case(SET_ACTUAL_TASK): {\r\n            return {\r\n                ...state,\r\n                actualTask: action.newActualTask\r\n            }\r\n        }\r\n        case(SET_CHANGING_DATES_LIST): {\r\n            return {\r\n                ...state,\r\n                changingDatesList: action.newChangingDatesList\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nfunction setTasksListAC(newTasksList) {\r\n    return {\r\n        type: SET_TASKS_LIST,\r\n        newTasksList\r\n    }\r\n}\r\n\r\nfunction setActualTaskAC(newActualTask) {\r\n    return {\r\n        type: SET_ACTUAL_TASK,\r\n        newActualTask\r\n    }\r\n}\r\n\r\nfunction setTotalTasksCountAC(newTotalCount) {\r\n    return {\r\n        type: SET_TOTAL_TASKS_COUNT,\r\n        newTotalCount\r\n    }\r\n}\r\n\r\nfunction setChangingDatesListAC(newChangingDatesList) {\r\n    return {\r\n        type: SET_CHANGING_DATES_LIST,\r\n        newChangingDatesList\r\n    }\r\n}\r\n\r\nexport function getTasks(projectId, page, title) {\r\n    return async (dispatch, getState) => {\r\n        const response = await tasksAPI.getTasks(projectId, title, page, getState().tasks.paginationSize)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            dispatch(setTasksListAC(response.data))\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\nexport function getDevelopersTasks(projectId, page, developerId, title) {\r\n    return async (dispatch, getState) => {\r\n        const response = await tasksAPI.getDevelopersTasks(projectId, title, page, getState().tasks.paginationSize, developerId)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            dispatch(setTasksListAC(response.data))\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function getSingleTask(taskId) {\r\n    return async dispatch => {\r\n        const response = await tasksAPI.getTask(taskId)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            dispatch(setActualTaskAC(response.data[0]))\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function getTotalTasksCount(projectId, title) {\r\n    return async dispatch => {\r\n        const response = await tasksAPI.getCount(projectId, title)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            dispatch(setTotalTasksCountAC(response.data[0]['COUNT(*)']))\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\nexport function getTotalDevelopersTasksCount(projectId, developerId, title) {\r\n    return async dispatch => {\r\n        const response = await tasksAPI.getDevelopersTasksCount(projectId, title, developerId)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            dispatch(setTotalTasksCountAC(response.data[0]['COUNT(*)']))\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteTask(taskId) {\r\n    return async dispatch => {\r\n        const response = await tasksAPI.deleteTask(taskId)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateTask(taskId, title, description, results, leadId) {\r\n    return async dispatch => {\r\n        const response = await tasksAPI.updateTask(taskId, title, description, results, leadId)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function putTask(title, description, results, actualDeadline, plannedDeadline, leadId, projectId) {\r\n    return async dispatch => {\r\n        const response = await tasksAPI.putTask(title, description, results, actualDeadline, plannedDeadline, leadId, projectId)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function getChangingDates(taskId) {\r\n    return async dispatch => {\r\n        const response = await changingDatesAPI.getAll(taskId)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            dispatch(setChangingDatesListAC(response.data))\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteChangingDate(changingDateId) {\r\n    return async dispatch => {\r\n        const response = await changingDatesAPI.deleteChangingDate(changingDateId)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function putChangingDate(cause, deadlineBefore, deadlineAfter, taskId) {\r\n    return async dispatch => {\r\n        const response = await changingDatesAPI.putChangingDate(cause, deadlineBefore, deadlineAfter, taskId)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateChangingDate(changingDateId, cause) {\r\n    return async dispatch => {\r\n        const response = await changingDatesAPI.updateChangingDate(changingDateId, cause)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function addDeveloperToTask(taskId, developerId) {\r\n    return async dispatch => {\r\n        const response = await tasksAPI.putDeveloperToTask(taskId, developerId)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteDeveloperFromTask(taskId, developerId) {\r\n    return async dispatch => {\r\n        const response = await tasksAPI.deleteDeveloperFromTask(taskId, developerId)\r\n        if(successResponseCondition(response.status, response.data.errMessage)) {\r\n            return Promise.resolve()\r\n        } else {\r\n            return Promise.reject(new Error(response.data.errMessage))\r\n        }\r\n    }\r\n}\r\n","import {connect} from 'react-redux'\r\nimport Tasks from './Tasks'\r\nimport * as selectors from '../../../../../../redux/selectors/index'\r\nimport {\r\n    deleteTask,\r\n    getSingleTask,\r\n    getTasks,\r\n    getTotalTasksCount,\r\n    updateTask,\r\n    deleteChangingDate,\r\n    getChangingDates,\r\n    putChangingDate,\r\n    updateChangingDate,\r\n    getDevelopersTasks,\r\n    getTotalDevelopersTasksCount\r\n} from '../../../../../../redux/reducers/tasks_reducer'\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        totalTasksCount: selectors.totalTasksCountSelector(state),\r\n        tasksList: selectors.tasksListSelector(state),\r\n        tasksPagSize: selectors.tasksPaginationSizeSelector(state),\r\n        actualTask: selectors.actualTaskSelector(state),\r\n        authId: selectors.authIdSelector(state),\r\n        changingDatesList: selectors.changingDatesListSelector(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getTotalTasksCount,\r\n    deleteTask,\r\n    getSingleTask,\r\n    getTasks,\r\n    updateTask,\r\n    deleteChangingDate,\r\n    getChangingDates,\r\n    putChangingDate,\r\n    updateChangingDate,\r\n    getDevelopersTasks,\r\n    getTotalDevelopersTasksCount\r\n})(Tasks)","import React from 'react'\r\nimport {Route} from 'react-router-dom'\r\nimport AllTasks from './all_tasks/AllTasksSide'\r\n\r\nexport default function Tasks(props) {\r\n    const {\r\n        totalTasksCount,\r\n        tasksList,\r\n        tasksPagSize,\r\n        actualTask,\r\n        getTotalTasksCount,\r\n        deleteTask,\r\n        getSingleTask,\r\n        getTasks,\r\n        updateTask,\r\n        authId,\r\n        deleteChangingDate,\r\n        getChangingDates,\r\n        putChangingDate,\r\n        updateChangingDate,\r\n        changingDatesList,\r\n        projectAccessRights,\r\n        getDevelopersTasks,\r\n        getTotalDevelopersTasksCount\r\n    } = props\r\n\r\n    function returnTaskAccessRights(actualTask, authId) {\r\n        const taskLeadId = actualTask ? +actualTask.task_lead_id : null\r\n        return projectAccessRights || taskLeadId === +authId\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Route\r\n                path={`/single_project/:id?/tasks/all_tasks/:page?`}\r\n                render={() => <AllTasks\r\n                    tasksList={tasksList}\r\n                    pagSize={tasksPagSize}\r\n                    totalTasksCount={totalTasksCount}\r\n                    getTasks={\r\n                        projectAccessRights\r\n                            ? getTasks\r\n                            : (projectId, page, title) => getDevelopersTasks(projectId, page, authId, title)\r\n                    }\r\n                    getTotalTasksCount={\r\n                        projectAccessRights\r\n                            ? getTotalTasksCount\r\n                            : (projectId, title) => getTotalDevelopersTasksCount(projectId, authId, title)\r\n                    }\r\n                    accessRights={projectAccessRights}\r\n                />}\r\n            />\r\n            <Route\r\n                path={`/single_project/:id?/tasks/single_task/:task_id?`}\r\n                render={() => <div></div>}\r\n            />\r\n        </div>\r\n    )\r\n}","import {NavLink, Redirect, Route} from 'react-router-dom'\r\nimport Loader from '../../../../utils_components/Loader'\r\nimport ProjectInfo from './project_info/ProjectInfo'\r\n\r\nimport ParticipantsContainer from './project_participants/ProjectParticipantsContainer'\r\nimport WorkWithProjectForm from '../../work_with_project_form/WorkWithProjectForm'\r\n\r\nimport React from 'react'\r\nimport * as style from './projects_manage.module.css'\r\nimport WorkWithTaskForm from \"./work_with_task_form/WorkWithTaskForm\";\r\nimport TasksContainer from \"./project_tasks/TasksContainer\";\r\n\r\nexport default function ProjectsManage(props) {\r\n    const {\r\n        existsFlag,\r\n        loading,\r\n        location,\r\n        id,\r\n        actualProject,\r\n        deleteAction,\r\n        accessRights,\r\n        onSubmitChangeProject,\r\n        initialValuesChangeProject,\r\n        initialValuesPutTask,\r\n        onSubmitPutTask\r\n    } = props\r\n    if(!existsFlag)\r\n        return <Redirect to='/projects/1'/>\r\n    if(loading)\r\n        return <Loader />\r\n    return (\r\n        <div className={style.projects_manage_wrapper}>\r\n            <div className={style.projects_nav}>\r\n                <ul>\r\n                    <NavLink\r\n                        to={`/single_project/${id}/project_info`}\r\n                        className={location.pathname.includes('change_project') ? 'active' : ''}\r\n                    >\r\n                        <li>\r\n                            {\r\n                                //Обрезка слишком длинных названий проекта\r\n                                actualProject.project_title.length > 15\r\n                                    ? actualProject.project_title.slice(0, 15) + '...'\r\n                                    : actualProject.project_title\r\n                            }\r\n                        </li>\r\n                    </NavLink>\r\n                    <NavLink\r\n                        to={`/single_project/${id}/tasks/all_tasks/1`}\r\n                        className={location.pathname.includes('/tasks/') ? 'active' : ''}\r\n                    ><li>Tasks</li></NavLink>\r\n                    <NavLink\r\n                        to={`/single_project/${id}/project_participants/1`}\r\n                        className={location.pathname.includes('/project_participants/') ? 'active' : ''}\r\n                    >\r\n                        <li>Participants</li>\r\n                    </NavLink>\r\n                </ul>\r\n            </div>\r\n            <div>\r\n                <Route path={`/single_project/:id?/project_info`} render={() => <ProjectInfo\r\n                    actualProject={actualProject}\r\n                    deleteAction={() => deleteAction(id)}\r\n                    accessRights={accessRights}\r\n                />}/>\r\n                <Route path={`/single_project/:id?/tasks/`} render={() => <TasksContainer\r\n                    projectAccessRights={accessRights}\r\n                />}/>\r\n                <Route path={`/single_project/:id?/project_participants/:page?`} render={() => <ParticipantsContainer />}/>\r\n                <Route path={'/single_project/:id?/change_project'} render={\r\n\r\n                    accessRights\r\n\r\n                        ? () => <WorkWithProjectForm\r\n                            onSubmit={onSubmitChangeProject}\r\n                            initialValues={initialValuesChangeProject}\r\n                            actualProject={actualProject}\r\n                            action={'Change'}\r\n                            location={location}\r\n                            projectId={id}/>\r\n\r\n                        : () => <Redirect to={'/profile'}/>\r\n                }/>\r\n                <Route path={'/single_project/:id?/tasks/put_task'} render={\r\n                    accessRights\r\n\r\n                        ? () => <WorkWithTaskForm\r\n                            action={'Put'}\r\n                            initialValues={initialValuesPutTask}\r\n                            onSubmit={onSubmitPutTask}\r\n                            projectId={id}\r\n                            location={location}/>\r\n\r\n                        : () => <Redirect to={'/profile'}/>\r\n                }/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {developersAPI} from '../../../../../api/index'\r\nimport ProjectsManage from './ProjectsManage'\r\n\r\nfunction ProjectsManageSide(props) {\r\n    const {\r\n        match,\r\n        actualProject,\r\n        getProjectById,\r\n        deleteProject,\r\n        history,\r\n        location,\r\n        changeProject,\r\n        accessRights,\r\n        putTask\r\n    } = props\r\n\r\n    const [loading, setLoading] = useState(true)\r\n    const id = +match.params.id\r\n\r\n    //Флаг существования запрашиваемого проекта\r\n    let [existsFlag, setExistsFlag] = useState(true)\r\n\r\n    //Данные для WorkWithProjectForm (в данном случае изменение проекта)\r\n    function initialValuesChangeProject(actualProject) {\r\n        return {\r\n            title: actualProject.project_title,\r\n            description: actualProject.project_description,\r\n            deadline: actualProject.project_deadline.slice(0, actualProject.project_deadline.indexOf('T')),\r\n            projectLeadEmail: actualProject.lead ? actualProject.lead.developer_email : ''\r\n        }\r\n    }\r\n    async function onSubmitChangeProject(values, setLoading) {\r\n        try {\r\n            setLoading(true)\r\n\r\n            //Если поле лидера не пустое => проверка на то, что он не явялется администратором\r\n            //и вообще существует\r\n            if(values.projectLeadEmail) {\r\n                const leadId = (await developersAPI.checkByDeveloper(values.projectLeadEmail)).id\r\n                if(leadId) {\r\n                    await changeProject(actualProject.project_id, values.title, values.description, values.deadline, leadId)\r\n                    history.push('/projects/1')\r\n                } else {\r\n                    alert(`Developer with email ${values.projectLeadEmail} not found`)\r\n                }\r\n            } else {\r\n                await changeProject(actualProject.project_id, values.title, values.description, values.deadline, '')\r\n                history.push('/projects/1')\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n            alert(err.message)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    //Данные для настройки WorkWithTasksForm (put project)\r\n    const initialValuesPutTask =  {\r\n        title: '',\r\n        description: '',\r\n        results: '',\r\n        planned_deadline_date: '',\r\n        planned_deadline_time: '',\r\n        taskLeadEmail: ''\r\n    }\r\n    async function onSubmitPutTask(values, setLoading) {\r\n        try {\r\n            setLoading(true)\r\n\r\n            //Если поле лидера не пустое => проверка на то, что он не явялется администратором\r\n            //и вообще существует\r\n            if(values.taskLeadEmail) {\r\n                const leadId = (await developersAPI.checkByDeveloper(values.taskLeadEmail)).id\r\n                if(leadId) {\r\n                    await putTask(\r\n                        values.title,\r\n                        values.description,\r\n                        values.results,\r\n                        `${values.planned_deadline_date} ${values.planned_deadline_time}`,\r\n                        `${values.planned_deadline_date} ${values.planned_deadline_time}`,\r\n                        leadId,\r\n                        id\r\n                    )\r\n                    history.push(`/single_project/${id}/tasks/all_tasks/1`)\r\n                } else {\r\n                    alert(`Developer with email ${values.taskLeadEmail} not found`)\r\n                }\r\n            } else {\r\n                await putTask(\r\n                    values.title,\r\n                    values.description,\r\n                    values.results,\r\n                    `${values.planned_deadline_date} ${values.planned_deadline_time}`,\r\n                    `${values.planned_deadline_date} ${values.planned_deadline_time}`,\r\n                    '',\r\n                    id\r\n                )\r\n                history.push(`/single_project/${id}/tasks/all_tasks/1`)\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n            alert(err.message)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    function deleteAction(id) {\r\n        // eslint-disable-next-line no-restricted-globals\r\n        const choice = confirm(`Are you sure to delete project \"${actualProject.project_title}\"?`)\r\n        if(choice) {\r\n            setLoading(true)\r\n            deleteProject(id)\r\n                .then(() => history.push('/projects/1'))\r\n                .catch(err => {\r\n                    if(err) {\r\n                        console.log(err)\r\n                        alert(err.message)\r\n                    }\r\n                })\r\n                .finally(() => setLoading(false))\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        getProjectById(id)\r\n            .catch(err => {\r\n                setExistsFlag(false)\r\n                console.log(err)\r\n                alert(err.message)\r\n            })\r\n            .finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    return <ProjectsManage\r\n        existsFlag={existsFlag}\r\n        loading={loading}\r\n        location={location}\r\n        id={id}\r\n        actualProject={actualProject}\r\n        deleteAction={deleteAction}\r\n        accessRights={accessRights}\r\n        onSubmitChangeProject={onSubmitChangeProject}\r\n        initialValuesChangeProject={initialValuesChangeProject}\r\n        initialValuesPutTask={initialValuesPutTask}\r\n        onSubmitPutTask={onSubmitPutTask}\r\n    />\r\n}\r\n\r\nexport default withRouter(ProjectsManageSide)\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport Profile from './profile/ProfileContainer'\r\nimport Projects from './projects/all_projects/ProjectsContainer'\r\nimport DevelopersContainer from './developers/DevelopersContainer'\r\nimport PutDeveloperForm from './put_developer_form/PutDeveloperForm'\r\nimport WorkWithProjectForm from './work_with_project_form/WorkWithProjectForm'\r\nimport AllNotificationsContainer from './notifications/AllNotificationsContainer'\r\nimport * as style from './work_wrapper.module.css'\r\nimport ProjectsManage from \"./projects/projects_manage/ProjectsManage\";\r\nimport ProjectsManageSide from \"./projects/projects_manage/ProjectsManageSide\";\r\n\r\n\r\nexport default function WorkWrapper(props) {\r\n\r\n    const {\r\n        onSubmitPutProject,\r\n        onSubmitPutDeveloper,\r\n        initialValuesPutDeveloper,\r\n        actualProject,\r\n        isAdmin,\r\n        location,\r\n        authId,\r\n        getProjectById,\r\n        deleteProject,\r\n        changeProject,\r\n        putTask\r\n    } = props\r\n\r\n    function returnProjectAccessRights(isAdmin, actualProject, authId) {\r\n        const projectLeadId = actualProject ? +actualProject.project_lead_id : null\r\n        return isAdmin || +projectLeadId === +authId\r\n    }\r\n\r\n    return (\r\n        <div className={style.work_wrapper}>\r\n            {\r\n                <>\r\n                    <Route path='/profile' exact={true} render={() => <Profile/>}/>\r\n                    <Route path='/profile/:id' exact={true} render={() => <Profile />}/>\r\n\r\n                    <Route path='/projects/:page?' render={() => <Projects />}/>\r\n                    <Route path='/developers/:page?' render={() => <DevelopersContainer\r\n\r\n                    />}/>\r\n\r\n                    <Route path='/put-developer' exact={true} render={ isAdmin\r\n                        ? () => <PutDeveloperForm onSubmitPutDeveloper={onSubmitPutDeveloper} />\r\n                        : () => <Redirect to={'/profile'}/>\r\n                    }/>\r\n                    <Route path='/put-project' render={ isAdmin\r\n\r\n                        ? () => <WorkWithProjectForm\r\n                            onSubmit={onSubmitPutProject}\r\n                            initialValues={initialValuesPutDeveloper}\r\n                            actualProject={actualProject}\r\n                            action={'Put'}\r\n                            location={location}/>\r\n\r\n                        : () => <Redirect to={'/profile'}/>\r\n                    }/>\r\n\r\n                    <Route path={`/single_project/:id?`} render={() => <ProjectsManageSide\r\n                        getProjectById={getProjectById}\r\n                        actualProject={actualProject}\r\n                        deleteProject={deleteProject}\r\n                        changeProject={changeProject}\r\n                        putTask={putTask}\r\n                        accessRights={returnProjectAccessRights(isAdmin, actualProject, authId)}\r\n                    />}/>\r\n\r\n                    <Route path={`/notifications/:page?`}\r\n                           render={() => <AllNotificationsContainer />}/>\r\n\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport WorkWrapper from './WorkWrapper'\r\nimport {developersAPI} from '../../../api'\r\n\r\nfunction WorkWrapperWithSide(props) {\r\n    const {\r\n        isAdmin,\r\n        putProject,\r\n        actualProject,\r\n        getProjectById,\r\n        deleteProject,\r\n        history,\r\n        changeProject,\r\n        location,\r\n        authId,\r\n        putTask,\r\n        putDeveloper\r\n    } = props\r\n\r\n    //Данные для настройки WorkWithProjectForm\r\n    function initialValuesPutDeveloper() {\r\n        return {\r\n            title: '',\r\n            description: '',\r\n            deadline: '',\r\n            projectLeadEmail: ''\r\n        }\r\n    }\r\n    async function onSubmitPutProject(values, setLoading) {\r\n        try {\r\n            setLoading(true)\r\n\r\n            //Если поле лидера не пустое => проверка на то, что он не явялется администратором\r\n            //и вообще существует\r\n            if(values.projectLeadEmail) {\r\n                const id = (await developersAPI.checkByDeveloper(values.projectLeadEmail)).id\r\n                if(id) {\r\n                    await putProject(values.title, values.description, values.deadline, id)\r\n                    history.push('/projects/1')\r\n                } else {\r\n                    alert(`Developer with email ${values.projectLeadEmail} not found`)\r\n                }\r\n            } else {\r\n                await putProject(values.title, values.description, values.deadline, '')\r\n                history.push('/projects/1')\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n            alert(err.message)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    function onSubmitPutDeveloper(values) {\r\n        //Проверка на доступность email среди всех пользователей\r\n        //кроме пользователя с id = -1 => среди всех пользователей\r\n        developersAPI.checkEmail(values.email, -1)\r\n            .then(async (response) => {\r\n                if(response.passed) {\r\n                    await putDeveloper(values)\r\n                    history.push('/developers/1')\r\n                } else {\r\n                    alert('This mail belongs to another user')\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                alert(err.message);\r\n            })\r\n    }\r\n\r\n    return <WorkWrapper\r\n        onSubmitPutProject={onSubmitPutProject}\r\n        onSubmitPutDeveloper={onSubmitPutDeveloper}\r\n        initialValuesPutDeveloper={initialValuesPutDeveloper}\r\n        actualProject={actualProject}\r\n        isAdmin={isAdmin}\r\n        location={location}\r\n        authId={authId}\r\n        getProjectById={getProjectById}\r\n        deleteProject={deleteProject}\r\n        changeProject={changeProject}\r\n        putTask={putTask}\r\n    />\r\n}\r\n\r\n\r\nexport default withRouter(WorkWrapperWithSide)","import {connect} from 'react-redux'\r\nimport WorkWrapper from './WorkWrapperWithSide'\r\nimport * as selectors from '../../../redux/selectors'\r\nimport {\r\n    putProject,\r\n    getProjectById,\r\n    deleteProject,\r\n    changeProject\r\n} from '../../../redux/reducers/projects_reducer'\r\n\r\nimport {putDeveloper} from '../../../redux/reducers/developers_reducer'\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAdmin: selectors.isAdminSelector(state),\r\n        actualProject: selectors.actualProjectSelector(state),\r\n        authId: selectors.authIdSelector(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    putProject,\r\n    getProjectById,\r\n    deleteProject,\r\n    changeProject,\r\n\r\n    putDeveloper\r\n})(WorkWrapper)","import React from 'react'\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport Loader from './components/utils_components/Loader'\r\nimport Header from './components/header/Header'\r\nimport AuthForm from './components/auth_form/AuthForm'\r\nimport AsideContainer from './components/main/aside/AsideContainer'\r\nimport WorkWrapperContainer from \"./components/main/work_wrapper/WorkWrapperContainer\";\r\n\r\nexport default function App(props) {\r\n\r\n    const {authId, loading, onSubmitAuth} = props\r\n\r\n    if(loading)\r\n        return <Loader />\r\n    if(!authId)\r\n        return <AuthForm onSubmitAuth={onSubmitAuth}/>\r\n    return (\r\n        <BrowserRouter>\r\n            <>\r\n                <Header headerLogo={'ITime'}/>\r\n                <main>\r\n                    <AsideContainer />\r\n                    <WorkWrapperContainer />\r\n                </main>\r\n            </>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n","import {connect} from 'react-redux'\r\nimport React, {useState} from 'react'\r\nimport App from './App'\r\nimport * as selectors from './redux/selectors'\r\nimport {auth} from './redux/reducers/auth_reducer'\r\n\r\nfunction AppContainer(props) {\r\n\r\n    const {authId, auth} = props\r\n    const [loading, setLoading] = useState(false)\r\n\r\n\r\n    function onSubmitAuth(values) {\r\n        setLoading(true)\r\n        auth(values.login, values.password)\r\n            .catch(err => {\r\n                console.log(err)\r\n                alert(err.message)\r\n            })\r\n            .finally(() => setLoading(false))\r\n    }\r\n\r\n\r\n    return <App\r\n        authId={authId}\r\n        loading={loading}\r\n        onSubmitAuth={onSubmitAuth}\r\n    />\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        authId: selectors.authIdSelector(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    auth\r\n})(AppContainer)","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport {Provider} from 'react-redux'\r\nimport {store} from './redux/store'\r\nimport AppContainer from './AppContainer'\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"developer_put_form\":\"put_developer_form_developer_put_form__3kfAB\",\"developer_put_form_data\":\"put_developer_form_developer_put_form_data__3AH-O\",\"developer_put_form_actions\":\"put_developer_form_developer_put_form_actions__26IqS\"};"],"sourceRoot":""}